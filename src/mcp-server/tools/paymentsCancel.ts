/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { paymentsCancel } from "../../funcs/paymentsCancel.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.CancelPaymentRequest$inboundSchema,
};

export const tool$paymentsCancel: ToolDefinition<typeof args> = {
  name: "payments-cancel",
  description: `Cancel payment

Depending on the payment method, you may be able to cancel a payment for a certain amount of time â€” usually until the next business day or as long as the payment status is open.

Payments may also be canceled manually from the Mollie Dashboard.

The \`isCancelable\` property on the [Payment object](get-payment) will indicate if the payment can be canceled.

> ðŸ”‘ Access with
>
> [API key](/reference/authentication)
>
> [Access token with **payments.write**](/reference/authentication)`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await paymentsCancel(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
