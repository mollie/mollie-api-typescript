/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { balancesGetReport } from "../../funcs/balancesGetReport.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetBalanceReportRequest$inboundSchema,
};

export const tool$balancesGetReport: ToolDefinition<typeof args> = {
  name: "balances-get-report",
  description: `Get balance report

Retrieve a summarized report for all transactions on a given balance within a given timeframe.

The API also provides a detailed report on all 'prepayments' for Mollie fees that were deducted from your balance during the reported period, ahead of your Mollie invoice.

The alias \`primary\` can be used instead of the balance ID to refer to the organization's primary balance.

> ðŸ”‘ Access with
>
> [Access token with **balance-reports.read**](/reference/authentication)`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await balancesGetReport(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
