/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { methodsGet } from "../../funcs/methodsGet.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetMethodRequest$inboundSchema,
};

export const tool$methodsGet: ToolDefinition<typeof args> = {
  name: "methods-get",
  description: `Get payment method

Retrieve a single payment method by its ID.

If a method is not available on this profile, a \`404 Not Found\` response is returned. If the method is available but not enabled yet, a status \`403 Forbidden\` is returned. You can enable payments methods via the [Enable payment method endpoint](enable-method) of the Profiles API, or via the Mollie Dashboard.

If you do not know the method's ID, you can use the [methods list endpoint](list-methods) to retrieve all payment methods that are available.

Additionally, it is possible to check if wallet methods such as Apple Pay are enabled by passing the wallet ID (\`applepay\`) as the method ID.

> ðŸ”‘ Access with
>
> [API key](/reference/authentication)
>
> [Access token with **payments.read**](/reference/authentication)`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await methodsGet(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
