/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The type of recipient, either `consumer` or `business`. This will determine what further fields are
 *
 * @remarks
 * required on the `recipient` object.
 */
export const SalesInvoiceRecipientTypeResponse = {
  Consumer: "consumer",
  Business: "business",
} as const;
/**
 * The type of recipient, either `consumer` or `business`. This will determine what further fields are
 *
 * @remarks
 * required on the `recipient` object.
 */
export type SalesInvoiceRecipientTypeResponse = OpenEnum<
  typeof SalesInvoiceRecipientTypeResponse
>;

/** @internal */
export const SalesInvoiceRecipientTypeResponse$inboundSchema: z.ZodType<
  SalesInvoiceRecipientTypeResponse,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(SalesInvoiceRecipientTypeResponse),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const SalesInvoiceRecipientTypeResponse$outboundSchema: z.ZodType<
  SalesInvoiceRecipientTypeResponse,
  z.ZodTypeDef,
  SalesInvoiceRecipientTypeResponse
> = z.union([
  z.nativeEnum(SalesInvoiceRecipientTypeResponse),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SalesInvoiceRecipientTypeResponse$ {
  /** @deprecated use `SalesInvoiceRecipientTypeResponse$inboundSchema` instead. */
  export const inboundSchema = SalesInvoiceRecipientTypeResponse$inboundSchema;
  /** @deprecated use `SalesInvoiceRecipientTypeResponse$outboundSchema` instead. */
  export const outboundSchema =
    SalesInvoiceRecipientTypeResponse$outboundSchema;
}
