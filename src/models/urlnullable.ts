/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type UrlNullable = {
  /**
   * The actual URL string.
   */
  href?: string | undefined;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type?: string | undefined;
};

/** @internal */
export const UrlNullable$inboundSchema: z.ZodType<
  UrlNullable,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/** @internal */
export type UrlNullable$Outbound = {
  href?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const UrlNullable$outboundSchema: z.ZodType<
  UrlNullable$Outbound,
  z.ZodTypeDef,
  UrlNullable
> = z.object({
  href: z.string().optional(),
  type: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UrlNullable$ {
  /** @deprecated use `UrlNullable$inboundSchema` instead. */
  export const inboundSchema = UrlNullable$inboundSchema;
  /** @deprecated use `UrlNullable$outboundSchema` instead. */
  export const outboundSchema = UrlNullable$outboundSchema;
  /** @deprecated use `UrlNullable$Outbound` instead. */
  export type Outbound = UrlNullable$Outbound;
}

export function urlNullableToJSON(urlNullable: UrlNullable): string {
  return JSON.stringify(UrlNullable$outboundSchema.parse(urlNullable));
}

export function urlNullableFromJSON(
  jsonString: string,
): SafeParseResult<UrlNullable, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UrlNullable$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UrlNullable' from JSON`,
  );
}
