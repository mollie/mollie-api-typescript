/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The locale for the recipient, to be used for translations in PDF generation and payment pages.
 */
export const SalesInvoiceRecipientLocaleResponse = {
  EnUS: "en_US",
  EnGB: "en_GB",
  NLNL: "nl_NL",
  NlBE: "nl_BE",
  DEDE: "de_DE",
  DeAT: "de_AT",
  DeCH: "de_CH",
  FRFR: "fr_FR",
  FrBE: "fr_BE",
} as const;
/**
 * The locale for the recipient, to be used for translations in PDF generation and payment pages.
 */
export type SalesInvoiceRecipientLocaleResponse = OpenEnum<
  typeof SalesInvoiceRecipientLocaleResponse
>;

/** @internal */
export const SalesInvoiceRecipientLocaleResponse$inboundSchema: z.ZodType<
  SalesInvoiceRecipientLocaleResponse,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(SalesInvoiceRecipientLocaleResponse),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const SalesInvoiceRecipientLocaleResponse$outboundSchema: z.ZodType<
  SalesInvoiceRecipientLocaleResponse,
  z.ZodTypeDef,
  SalesInvoiceRecipientLocaleResponse
> = z.union([
  z.nativeEnum(SalesInvoiceRecipientLocaleResponse),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SalesInvoiceRecipientLocaleResponse$ {
  /** @deprecated use `SalesInvoiceRecipientLocaleResponse$inboundSchema` instead. */
  export const inboundSchema =
    SalesInvoiceRecipientLocaleResponse$inboundSchema;
  /** @deprecated use `SalesInvoiceRecipientLocaleResponse$outboundSchema` instead. */
  export const outboundSchema =
    SalesInvoiceRecipientLocaleResponse$outboundSchema;
}
