/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

export const BalanceTransactionType = {
  ApplicationFee: "application-fee",
  Capture: "capture",
  Chargeback: "chargeback",
  ChargebackReversal: "chargeback-reversal",
  FailedPaymentFee: "failed-payment-fee",
  FailedPayment: "failed-payment",
  InvoiceCompensation: "invoice-compensation",
  Payment: "payment",
  PaymentFee: "payment-fee",
  PaymentCommission: "payment-commission",
  Refund: "refund",
  ReturnedRefund: "returned-refund",
  ReturnedTransfer: "returned-transfer",
  SplitPayment: "split-payment",
  OutgoingTransfer: "outgoing-transfer",
  CaptureCommission: "capture-commission",
  CanceledOutgoingTransfer: "canceled-outgoing-transfer",
  IncomingTransfer: "incoming-transfer",
  ApiPaymentRollingReserveRelease: "api-payment-rolling-reserve-release",
  CaptureRollingReserveRelease: "capture-rolling-reserve-release",
  ReimbursementFee: "reimbursement-fee",
  BalanceCorrection: "balance-correction",
  UnauthorizedDirectDebit: "unauthorized-direct-debit",
  BankChargedFailureFee: "bank-charged-failure-fee",
  PlatformPaymentRefund: "platform-payment-refund",
  RefundCompensation: "refund-compensation",
  ReturnedRefundCompensation: "returned-refund-compensation",
  ReturnedPlatformPaymentRefund: "returned-platform-payment-refund",
  PlatformPaymentChargeback: "platform-payment-chargeback",
  ChargebackCompensation: "chargeback-compensation",
  ReversedPlatformPaymentChargeback: "reversed-platform-payment-chargeback",
  ReversedChargebackCompensation: "reversed-chargeback-compensation",
  FailedSplitPaymentPlatform: "failed-split-payment-platform",
  FailedSplitPaymentCompensation: "failed-split-payment-compensation",
  CashAdvanceLoan: "cash-advance-loan",
  PlatformConnectedOrganizationsFee: "platform-connected-organizations-fee",
  SplitTransaction: "split-transaction",
  ManagedFee: "managed-fee",
  ReturnedManagedFee: "returned-managed-fee",
  Topup: "topup",
  BalanceReserve: "balance-reserve",
  BalanceReserveReturn: "balance-reserve-return",
  Movement: "movement",
  PostPaymentSplitPayment: "post-payment-split-payment",
  CashCollateralIssuance: "cash-collateral-issuance",
  CashCollateralRelease: "cash-collateral-release",
} as const;
export type BalanceTransactionType = OpenEnum<typeof BalanceTransactionType>;

/** @internal */
export const BalanceTransactionType$inboundSchema: z.ZodType<
  BalanceTransactionType,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(BalanceTransactionType),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const BalanceTransactionType$outboundSchema: z.ZodType<
  BalanceTransactionType,
  z.ZodTypeDef,
  BalanceTransactionType
> = z.union([
  z.nativeEnum(BalanceTransactionType),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BalanceTransactionType$ {
  /** @deprecated use `BalanceTransactionType$inboundSchema` instead. */
  export const inboundSchema = BalanceTransactionType$inboundSchema;
  /** @deprecated use `BalanceTransactionType$outboundSchema` instead. */
  export const outboundSchema = BalanceTransactionType$outboundSchema;
}
