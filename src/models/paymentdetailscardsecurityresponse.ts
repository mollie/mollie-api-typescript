/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The level of security applied during card processing.
 */
export const PaymentDetailsCardSecurityResponse = {
  Normal: "normal",
  Threedsecure: "3dsecure",
} as const;
/**
 * The level of security applied during card processing.
 */
export type PaymentDetailsCardSecurityResponse = OpenEnum<
  typeof PaymentDetailsCardSecurityResponse
>;

/** @internal */
export const PaymentDetailsCardSecurityResponse$inboundSchema: z.ZodType<
  PaymentDetailsCardSecurityResponse,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(PaymentDetailsCardSecurityResponse),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const PaymentDetailsCardSecurityResponse$outboundSchema: z.ZodType<
  PaymentDetailsCardSecurityResponse,
  z.ZodTypeDef,
  PaymentDetailsCardSecurityResponse
> = z.union([
  z.nativeEnum(PaymentDetailsCardSecurityResponse),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentDetailsCardSecurityResponse$ {
  /** @deprecated use `PaymentDetailsCardSecurityResponse$inboundSchema` instead. */
  export const inboundSchema = PaymentDetailsCardSecurityResponse$inboundSchema;
  /** @deprecated use `PaymentDetailsCardSecurityResponse$outboundSchema` instead. */
  export const outboundSchema =
    PaymentDetailsCardSecurityResponse$outboundSchema;
}
