/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The method by which the card was read by the terminal.
 */
export const PaymentDetailsReceiptCardReadMethodResponse = {
  Chip: "chip",
  MagneticStripe: "magnetic-stripe",
  NearFieldCommunication: "near-field-communication",
  Contactless: "contactless",
  Moto: "moto",
} as const;
/**
 * The method by which the card was read by the terminal.
 */
export type PaymentDetailsReceiptCardReadMethodResponse = OpenEnum<
  typeof PaymentDetailsReceiptCardReadMethodResponse
>;

/** @internal */
export const PaymentDetailsReceiptCardReadMethodResponse$inboundSchema:
  z.ZodType<
    PaymentDetailsReceiptCardReadMethodResponse,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(PaymentDetailsReceiptCardReadMethodResponse),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const PaymentDetailsReceiptCardReadMethodResponse$outboundSchema:
  z.ZodType<
    PaymentDetailsReceiptCardReadMethodResponse,
    z.ZodTypeDef,
    PaymentDetailsReceiptCardReadMethodResponse
  > = z.union([
    z.nativeEnum(PaymentDetailsReceiptCardReadMethodResponse),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentDetailsReceiptCardReadMethodResponse$ {
  /** @deprecated use `PaymentDetailsReceiptCardReadMethodResponse$inboundSchema` instead. */
  export const inboundSchema =
    PaymentDetailsReceiptCardReadMethodResponse$inboundSchema;
  /** @deprecated use `PaymentDetailsReceiptCardReadMethodResponse$outboundSchema` instead. */
  export const outboundSchema =
    PaymentDetailsReceiptCardReadMethodResponse$outboundSchema;
}
