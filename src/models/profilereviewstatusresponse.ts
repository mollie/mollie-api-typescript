/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The status of the requested changes.
 */
export const ProfileReviewStatusResponse = {
  Pending: "pending",
  Rejected: "rejected",
} as const;
/**
 * The status of the requested changes.
 */
export type ProfileReviewStatusResponse = OpenEnum<
  typeof ProfileReviewStatusResponse
>;

/** @internal */
export const ProfileReviewStatusResponse$inboundSchema: z.ZodType<
  ProfileReviewStatusResponse,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(ProfileReviewStatusResponse),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const ProfileReviewStatusResponse$outboundSchema: z.ZodType<
  ProfileReviewStatusResponse,
  z.ZodTypeDef,
  ProfileReviewStatusResponse
> = z.union([
  z.nativeEnum(ProfileReviewStatusResponse),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProfileReviewStatusResponse$ {
  /** @deprecated use `ProfileReviewStatusResponse$inboundSchema` instead. */
  export const inboundSchema = ProfileReviewStatusResponse$inboundSchema;
  /** @deprecated use `ProfileReviewStatusResponse$outboundSchema` instead. */
  export const outboundSchema = ProfileReviewStatusResponse$outboundSchema;
}
