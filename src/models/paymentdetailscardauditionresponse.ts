/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The card's target audience, if known.
 */
export const PaymentDetailsCardAuditionResponse = {
  Consumer: "consumer",
  Business: "business",
} as const;
/**
 * The card's target audience, if known.
 */
export type PaymentDetailsCardAuditionResponse = OpenEnum<
  typeof PaymentDetailsCardAuditionResponse
>;

/** @internal */
export const PaymentDetailsCardAuditionResponse$inboundSchema: z.ZodType<
  PaymentDetailsCardAuditionResponse,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(PaymentDetailsCardAuditionResponse),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const PaymentDetailsCardAuditionResponse$outboundSchema: z.ZodType<
  PaymentDetailsCardAuditionResponse,
  z.ZodTypeDef,
  PaymentDetailsCardAuditionResponse
> = z.union([
  z.nativeEnum(PaymentDetailsCardAuditionResponse),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentDetailsCardAuditionResponse$ {
  /** @deprecated use `PaymentDetailsCardAuditionResponse$inboundSchema` instead. */
  export const inboundSchema = PaymentDetailsCardAuditionResponse$inboundSchema;
  /** @deprecated use `PaymentDetailsCardAuditionResponse$outboundSchema` instead. */
  export const outboundSchema =
    PaymentDetailsCardAuditionResponse$outboundSchema;
}
