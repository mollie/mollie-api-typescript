/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The status of the mandate. A status can be `pending` for mandates when the first payment is not yet finalized, or
 *
 * @remarks
 * when we did not received the IBAN yet from the first payment.
 */
export const MandateStatus = {
  Valid: "valid",
  Pending: "pending",
  Invalid: "invalid",
} as const;
/**
 * The status of the mandate. A status can be `pending` for mandates when the first payment is not yet finalized, or
 *
 * @remarks
 * when we did not received the IBAN yet from the first payment.
 */
export type MandateStatus = OpenEnum<typeof MandateStatus>;

/** @internal */
export const MandateStatus$inboundSchema: z.ZodType<
  MandateStatus,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(MandateStatus),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const MandateStatus$outboundSchema: z.ZodType<
  MandateStatus,
  z.ZodTypeDef,
  MandateStatus
> = z.union([
  z.nativeEnum(MandateStatus),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MandateStatus$ {
  /** @deprecated use `MandateStatus$inboundSchema` instead. */
  export const inboundSchema = MandateStatus$inboundSchema;
  /** @deprecated use `MandateStatus$outboundSchema` instead. */
  export const outboundSchema = MandateStatus$outboundSchema;
}
