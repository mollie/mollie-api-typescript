/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

export const PaymentLinkMethodResponse = {
  Applepay: "applepay",
  Bacs: "bacs",
  Bancomatpay: "bancomatpay",
  Bancontact: "bancontact",
  Banktransfer: "banktransfer",
  Belfius: "belfius",
  Billie: "billie",
  Blik: "blik",
  Creditcard: "creditcard",
  Eps: "eps",
  Giftcard: "giftcard",
  Ideal: "ideal",
  In3: "in3",
  Kbc: "kbc",
  Klarna: "klarna",
  Mbway: "mbway",
  Multibanco: "multibanco",
  Mybank: "mybank",
  Paybybank: "paybybank",
  Paypal: "paypal",
  Paysafecard: "paysafecard",
  Pointofsale: "pointofsale",
  Przelewy24: "przelewy24",
  Riverty: "riverty",
  Satispay: "satispay",
  Swish: "swish",
  Trustly: "trustly",
  Twint: "twint",
  Voucher: "voucher",
} as const;
export type PaymentLinkMethodResponse = OpenEnum<
  typeof PaymentLinkMethodResponse
>;

/** @internal */
export const PaymentLinkMethodResponse$inboundSchema: z.ZodType<
  PaymentLinkMethodResponse,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(PaymentLinkMethodResponse),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const PaymentLinkMethodResponse$outboundSchema: z.ZodType<
  PaymentLinkMethodResponse,
  z.ZodTypeDef,
  PaymentLinkMethodResponse
> = z.union([
  z.nativeEnum(PaymentLinkMethodResponse),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentLinkMethodResponse$ {
  /** @deprecated use `PaymentLinkMethodResponse$inboundSchema` instead. */
  export const inboundSchema = PaymentLinkMethodResponse$inboundSchema;
  /** @deprecated use `PaymentLinkMethodResponse$outboundSchema` instead. */
  export const outboundSchema = PaymentLinkMethodResponse$outboundSchema;
}
