/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The brand of the terminal.
 */
export const TerminalBrand = {
  Pax: "PAX",
  Tap: "Tap",
} as const;
/**
 * The brand of the terminal.
 */
export type TerminalBrand = OpenEnum<typeof TerminalBrand>;

/** @internal */
export const TerminalBrand$inboundSchema: z.ZodType<
  TerminalBrand,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(TerminalBrand),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const TerminalBrand$outboundSchema: z.ZodType<
  TerminalBrand,
  z.ZodTypeDef,
  TerminalBrand
> = z.union([
  z.nativeEnum(TerminalBrand),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TerminalBrand$ {
  /** @deprecated use `TerminalBrand$inboundSchema` instead. */
  export const inboundSchema = TerminalBrand$inboundSchema;
  /** @deprecated use `TerminalBrand$outboundSchema` instead. */
  export const outboundSchema = TerminalBrand$outboundSchema;
}
