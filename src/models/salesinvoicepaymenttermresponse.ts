/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The payment term to be set on the invoice.
 */
export const SalesInvoicePaymentTermResponse = {
  Sevendays: "7 days",
  Fourteendays: "14 days",
  Thirtydays: "30 days",
  FortyFivedays: "45 days",
  Sixtydays: "60 days",
  Ninetydays: "90 days",
  OneHundredAndTwentydays: "120 days",
} as const;
/**
 * The payment term to be set on the invoice.
 */
export type SalesInvoicePaymentTermResponse = OpenEnum<
  typeof SalesInvoicePaymentTermResponse
>;

/** @internal */
export const SalesInvoicePaymentTermResponse$inboundSchema: z.ZodType<
  SalesInvoicePaymentTermResponse,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(SalesInvoicePaymentTermResponse),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const SalesInvoicePaymentTermResponse$outboundSchema: z.ZodType<
  SalesInvoicePaymentTermResponse,
  z.ZodTypeDef,
  SalesInvoicePaymentTermResponse
> = z.union([
  z.nativeEnum(SalesInvoicePaymentTermResponse),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SalesInvoicePaymentTermResponse$ {
  /** @deprecated use `SalesInvoicePaymentTermResponse$inboundSchema` instead. */
  export const inboundSchema = SalesInvoicePaymentTermResponse$inboundSchema;
  /** @deprecated use `SalesInvoicePaymentTermResponse$outboundSchema` instead. */
  export const outboundSchema = SalesInvoicePaymentTermResponse$outboundSchema;
}
