/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../types/enums.js";

/**
 * Specifies the reference type
 */
export const RefundExternalReferenceType = {
  AcquirerReference: "acquirer-reference",
} as const;
/**
 * Specifies the reference type
 */
export type RefundExternalReferenceType = ClosedEnum<
  typeof RefundExternalReferenceType
>;

/** @internal */
export const RefundExternalReferenceType$inboundSchema: z.ZodNativeEnum<
  typeof RefundExternalReferenceType
> = z.nativeEnum(RefundExternalReferenceType);

/** @internal */
export const RefundExternalReferenceType$outboundSchema: z.ZodNativeEnum<
  typeof RefundExternalReferenceType
> = RefundExternalReferenceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RefundExternalReferenceType$ {
  /** @deprecated use `RefundExternalReferenceType$inboundSchema` instead. */
  export const inboundSchema = RefundExternalReferenceType$inboundSchema;
  /** @deprecated use `RefundExternalReferenceType$outboundSchema` instead. */
  export const outboundSchema = RefundExternalReferenceType$outboundSchema;
}
