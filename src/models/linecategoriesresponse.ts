/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

export const LineCategoriesResponse = {
  Eco: "eco",
  Gift: "gift",
  Meal: "meal",
  SportCulture: "sport_culture",
  Additional: "additional",
  Consume: "consume",
} as const;
export type LineCategoriesResponse = OpenEnum<typeof LineCategoriesResponse>;

/** @internal */
export const LineCategoriesResponse$inboundSchema: z.ZodType<
  LineCategoriesResponse,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(LineCategoriesResponse),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const LineCategoriesResponse$outboundSchema: z.ZodType<
  LineCategoriesResponse,
  z.ZodTypeDef,
  LineCategoriesResponse
> = z.union([
  z.nativeEnum(LineCategoriesResponse),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LineCategoriesResponse$ {
  /** @deprecated use `LineCategoriesResponse$inboundSchema` instead. */
  export const inboundSchema = LineCategoriesResponse$inboundSchema;
  /** @deprecated use `LineCategoriesResponse$outboundSchema` instead. */
  export const outboundSchema = LineCategoriesResponse$outboundSchema;
}
