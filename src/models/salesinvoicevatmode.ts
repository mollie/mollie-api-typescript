/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../types/enums.js";

/**
 * The VAT mode to use for VAT calculation. `exclusive` mode means we will apply the relevant VAT on top of the
 *
 * @remarks
 * price. `inclusive` means the prices you are providing to us already contain the VAT you want to apply.
 */
export const SalesInvoiceVatMode = {
  Exclusive: "exclusive",
  Inclusive: "inclusive",
} as const;
/**
 * The VAT mode to use for VAT calculation. `exclusive` mode means we will apply the relevant VAT on top of the
 *
 * @remarks
 * price. `inclusive` means the prices you are providing to us already contain the VAT you want to apply.
 */
export type SalesInvoiceVatMode = ClosedEnum<typeof SalesInvoiceVatMode>;

/** @internal */
export const SalesInvoiceVatMode$inboundSchema: z.ZodNativeEnum<
  typeof SalesInvoiceVatMode
> = z.nativeEnum(SalesInvoiceVatMode);

/** @internal */
export const SalesInvoiceVatMode$outboundSchema: z.ZodNativeEnum<
  typeof SalesInvoiceVatMode
> = SalesInvoiceVatMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SalesInvoiceVatMode$ {
  /** @deprecated use `SalesInvoiceVatMode$inboundSchema` instead. */
  export const inboundSchema = SalesInvoiceVatMode$inboundSchema;
  /** @deprecated use `SalesInvoiceVatMode$outboundSchema` instead. */
  export const outboundSchema = SalesInvoiceVatMode$outboundSchema;
}
