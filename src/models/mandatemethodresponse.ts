/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * Payment method of the mandate.
 *
 * @remarks
 *
 * SEPA Direct Debit and PayPal mandates can be created directly.
 */
export const MandateMethodResponse = {
  Creditcard: "creditcard",
  Directdebit: "directdebit",
  Paypal: "paypal",
} as const;
/**
 * Payment method of the mandate.
 *
 * @remarks
 *
 * SEPA Direct Debit and PayPal mandates can be created directly.
 */
export type MandateMethodResponse = OpenEnum<typeof MandateMethodResponse>;

/** @internal */
export const MandateMethodResponse$inboundSchema: z.ZodType<
  MandateMethodResponse,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(MandateMethodResponse),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const MandateMethodResponse$outboundSchema: z.ZodType<
  MandateMethodResponse,
  z.ZodTypeDef,
  MandateMethodResponse
> = z.union([
  z.nativeEnum(MandateMethodResponse),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MandateMethodResponse$ {
  /** @deprecated use `MandateMethodResponse$inboundSchema` instead. */
  export const inboundSchema = MandateMethodResponse$inboundSchema;
  /** @deprecated use `MandateMethodResponse$outboundSchema` instead. */
  export const outboundSchema = MandateMethodResponse$outboundSchema;
}
