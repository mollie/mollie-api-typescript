/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The model of the terminal. For example for a PAX A920, this field's value will be `A920`.
 */
export const TerminalModel = {
  A35: "A35",
  A77: "A77",
  A920: "A920",
  A920Pro: "A920Pro",
  Im30: "IM30",
  Tap: "Tap",
} as const;
/**
 * The model of the terminal. For example for a PAX A920, this field's value will be `A920`.
 */
export type TerminalModel = OpenEnum<typeof TerminalModel>;

/** @internal */
export const TerminalModel$inboundSchema: z.ZodType<
  TerminalModel,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(TerminalModel),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const TerminalModel$outboundSchema: z.ZodType<
  TerminalModel,
  z.ZodTypeDef,
  TerminalModel
> = z.union([
  z.nativeEnum(TerminalModel),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TerminalModel$ {
  /** @deprecated use `TerminalModel$inboundSchema` instead. */
  export const inboundSchema = TerminalModel$inboundSchema;
  /** @deprecated use `TerminalModel$outboundSchema` instead. */
  export const outboundSchema = TerminalModel$outboundSchema;
}
