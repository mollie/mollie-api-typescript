/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The status of the balance.
 */
export const BalanceStatus = {
  Active: "active",
  Inactive: "inactive",
} as const;
/**
 * The status of the balance.
 */
export type BalanceStatus = OpenEnum<typeof BalanceStatus>;

/** @internal */
export const BalanceStatus$inboundSchema: z.ZodType<
  BalanceStatus,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(BalanceStatus),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const BalanceStatus$outboundSchema: z.ZodType<
  BalanceStatus,
  z.ZodTypeDef,
  BalanceStatus
> = z.union([
  z.nativeEnum(BalanceStatus),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BalanceStatus$ {
  /** @deprecated use `BalanceStatus$inboundSchema` instead. */
  export const inboundSchema = BalanceStatus$inboundSchema;
  /** @deprecated use `BalanceStatus$outboundSchema` instead. */
  export const outboundSchema = BalanceStatus$outboundSchema;
}
