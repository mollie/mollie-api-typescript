/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The applicable card fee region.
 */
export const PaymentDetailsFeeRegionResponse = {
  AmericanExpress: "american-express",
  AmexIntraEea: "amex-intra-eea",
  CarteBancaire: "carte-bancaire",
  IntraEu: "intra-eu",
  IntraEuCorporate: "intra-eu-corporate",
  Domestic: "domestic",
  Maestro: "maestro",
  Other: "other",
  Inter: "inter",
  IntraEea: "intra_eea",
} as const;
/**
 * The applicable card fee region.
 */
export type PaymentDetailsFeeRegionResponse = OpenEnum<
  typeof PaymentDetailsFeeRegionResponse
>;

/** @internal */
export const PaymentDetailsFeeRegionResponse$inboundSchema: z.ZodType<
  PaymentDetailsFeeRegionResponse,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(PaymentDetailsFeeRegionResponse),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const PaymentDetailsFeeRegionResponse$outboundSchema: z.ZodType<
  PaymentDetailsFeeRegionResponse,
  z.ZodTypeDef,
  PaymentDetailsFeeRegionResponse
> = z.union([
  z.nativeEnum(PaymentDetailsFeeRegionResponse),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentDetailsFeeRegionResponse$ {
  /** @deprecated use `PaymentDetailsFeeRegionResponse$inboundSchema` instead. */
  export const inboundSchema = PaymentDetailsFeeRegionResponse$inboundSchema;
  /** @deprecated use `PaymentDetailsFeeRegionResponse$outboundSchema` instead. */
  export const outboundSchema = PaymentDetailsFeeRegionResponse$outboundSchema;
}
