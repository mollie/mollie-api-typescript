/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

/**
 * The payment term to be set on the invoice.
 */
export const SalesInvoicePaymentTerm = {
  Sevendays: "7 days",
  Fourteendays: "14 days",
  Thirtydays: "30 days",
  FortyFivedays: "45 days",
  Sixtydays: "60 days",
  Ninetydays: "90 days",
  OneHundredAndTwentydays: "120 days",
} as const;
/**
 * The payment term to be set on the invoice.
 */
export type SalesInvoicePaymentTerm = ClosedEnum<
  typeof SalesInvoicePaymentTerm
>;

/** @internal */
export const SalesInvoicePaymentTerm$inboundSchema: z.ZodNativeEnum<
  typeof SalesInvoicePaymentTerm
> = z.nativeEnum(SalesInvoicePaymentTerm);

/** @internal */
export const SalesInvoicePaymentTerm$outboundSchema: z.ZodNativeEnum<
  typeof SalesInvoicePaymentTerm
> = SalesInvoicePaymentTerm$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SalesInvoicePaymentTerm$ {
  /** @deprecated use `SalesInvoicePaymentTerm$inboundSchema` instead. */
  export const inboundSchema = SalesInvoicePaymentTerm$inboundSchema;
  /** @deprecated use `SalesInvoicePaymentTerm$outboundSchema` instead. */
  export const outboundSchema = SalesInvoicePaymentTerm$outboundSchema;
}
