/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

/**
 * The type of recipient, either `consumer` or `business`. This will determine what further fields are
 *
 * @remarks
 * required on the `recipient` object.
 */
export const SalesInvoiceRecipientType = {
  Consumer: "consumer",
  Business: "business",
} as const;
/**
 * The type of recipient, either `consumer` or `business`. This will determine what further fields are
 *
 * @remarks
 * required on the `recipient` object.
 */
export type SalesInvoiceRecipientType = ClosedEnum<
  typeof SalesInvoiceRecipientType
>;

/** @internal */
export const SalesInvoiceRecipientType$inboundSchema: z.ZodNativeEnum<
  typeof SalesInvoiceRecipientType
> = z.nativeEnum(SalesInvoiceRecipientType);

/** @internal */
export const SalesInvoiceRecipientType$outboundSchema: z.ZodNativeEnum<
  typeof SalesInvoiceRecipientType
> = SalesInvoiceRecipientType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SalesInvoiceRecipientType$ {
  /** @deprecated use `SalesInvoiceRecipientType$inboundSchema` instead. */
  export const inboundSchema = SalesInvoiceRecipientType$inboundSchema;
  /** @deprecated use `SalesInvoiceRecipientType$outboundSchema` instead. */
  export const outboundSchema = SalesInvoiceRecipientType$outboundSchema;
}
