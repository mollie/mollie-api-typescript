/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  SalesInvoiceDiscountTypeResponse,
  SalesInvoiceDiscountTypeResponse$inboundSchema,
  SalesInvoiceDiscountTypeResponse$outboundSchema,
} from "./salesinvoicediscounttyperesponse.js";

export type SalesInvoiceDiscountResponse = {
  /**
   * The type of discount.
   */
  type: SalesInvoiceDiscountTypeResponse;
  /**
   * A string containing an exact monetary amount in the given currency, or the percentage.
   */
  value: string;
};

/** @internal */
export const SalesInvoiceDiscountResponse$inboundSchema: z.ZodType<
  SalesInvoiceDiscountResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: SalesInvoiceDiscountTypeResponse$inboundSchema,
  value: z.string(),
});

/** @internal */
export type SalesInvoiceDiscountResponse$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const SalesInvoiceDiscountResponse$outboundSchema: z.ZodType<
  SalesInvoiceDiscountResponse$Outbound,
  z.ZodTypeDef,
  SalesInvoiceDiscountResponse
> = z.object({
  type: SalesInvoiceDiscountTypeResponse$outboundSchema,
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SalesInvoiceDiscountResponse$ {
  /** @deprecated use `SalesInvoiceDiscountResponse$inboundSchema` instead. */
  export const inboundSchema = SalesInvoiceDiscountResponse$inboundSchema;
  /** @deprecated use `SalesInvoiceDiscountResponse$outboundSchema` instead. */
  export const outboundSchema = SalesInvoiceDiscountResponse$outboundSchema;
  /** @deprecated use `SalesInvoiceDiscountResponse$Outbound` instead. */
  export type Outbound = SalesInvoiceDiscountResponse$Outbound;
}

export function salesInvoiceDiscountResponseToJSON(
  salesInvoiceDiscountResponse: SalesInvoiceDiscountResponse,
): string {
  return JSON.stringify(
    SalesInvoiceDiscountResponse$outboundSchema.parse(
      salesInvoiceDiscountResponse,
    ),
  );
}

export function salesInvoiceDiscountResponseFromJSON(
  jsonString: string,
): SafeParseResult<SalesInvoiceDiscountResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SalesInvoiceDiscountResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SalesInvoiceDiscountResponse' from JSON`,
  );
}
