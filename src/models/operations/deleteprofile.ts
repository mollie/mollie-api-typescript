/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteProfileRequest = {
  /**
   * Provide the ID of the item you want to perform this operation on.
   */
  id: string;
};

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type DeleteProfileGoneDocumentation = {
  href: string;
  type: string;
};

export type DeleteProfileGoneLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation: DeleteProfileGoneDocumentation;
};

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type DeleteProfileNotFoundDocumentation = {
  href: string;
  type: string;
};

export type DeleteProfileNotFoundLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation: DeleteProfileNotFoundDocumentation;
};

/** @internal */
export const DeleteProfileRequest$inboundSchema: z.ZodType<
  DeleteProfileRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteProfileRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteProfileRequest$outboundSchema: z.ZodType<
  DeleteProfileRequest$Outbound,
  z.ZodTypeDef,
  DeleteProfileRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteProfileRequest$ {
  /** @deprecated use `DeleteProfileRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteProfileRequest$inboundSchema;
  /** @deprecated use `DeleteProfileRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteProfileRequest$outboundSchema;
  /** @deprecated use `DeleteProfileRequest$Outbound` instead. */
  export type Outbound = DeleteProfileRequest$Outbound;
}

export function deleteProfileRequestToJSON(
  deleteProfileRequest: DeleteProfileRequest,
): string {
  return JSON.stringify(
    DeleteProfileRequest$outboundSchema.parse(deleteProfileRequest),
  );
}

export function deleteProfileRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteProfileRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteProfileRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteProfileRequest' from JSON`,
  );
}

/** @internal */
export const DeleteProfileGoneDocumentation$inboundSchema: z.ZodType<
  DeleteProfileGoneDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type DeleteProfileGoneDocumentation$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const DeleteProfileGoneDocumentation$outboundSchema: z.ZodType<
  DeleteProfileGoneDocumentation$Outbound,
  z.ZodTypeDef,
  DeleteProfileGoneDocumentation
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteProfileGoneDocumentation$ {
  /** @deprecated use `DeleteProfileGoneDocumentation$inboundSchema` instead. */
  export const inboundSchema = DeleteProfileGoneDocumentation$inboundSchema;
  /** @deprecated use `DeleteProfileGoneDocumentation$outboundSchema` instead. */
  export const outboundSchema = DeleteProfileGoneDocumentation$outboundSchema;
  /** @deprecated use `DeleteProfileGoneDocumentation$Outbound` instead. */
  export type Outbound = DeleteProfileGoneDocumentation$Outbound;
}

export function deleteProfileGoneDocumentationToJSON(
  deleteProfileGoneDocumentation: DeleteProfileGoneDocumentation,
): string {
  return JSON.stringify(
    DeleteProfileGoneDocumentation$outboundSchema.parse(
      deleteProfileGoneDocumentation,
    ),
  );
}

export function deleteProfileGoneDocumentationFromJSON(
  jsonString: string,
): SafeParseResult<DeleteProfileGoneDocumentation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteProfileGoneDocumentation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteProfileGoneDocumentation' from JSON`,
  );
}

/** @internal */
export const DeleteProfileGoneLinks$inboundSchema: z.ZodType<
  DeleteProfileGoneLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => DeleteProfileGoneDocumentation$inboundSchema),
});

/** @internal */
export type DeleteProfileGoneLinks$Outbound = {
  documentation: DeleteProfileGoneDocumentation$Outbound;
};

/** @internal */
export const DeleteProfileGoneLinks$outboundSchema: z.ZodType<
  DeleteProfileGoneLinks$Outbound,
  z.ZodTypeDef,
  DeleteProfileGoneLinks
> = z.object({
  documentation: z.lazy(() => DeleteProfileGoneDocumentation$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteProfileGoneLinks$ {
  /** @deprecated use `DeleteProfileGoneLinks$inboundSchema` instead. */
  export const inboundSchema = DeleteProfileGoneLinks$inboundSchema;
  /** @deprecated use `DeleteProfileGoneLinks$outboundSchema` instead. */
  export const outboundSchema = DeleteProfileGoneLinks$outboundSchema;
  /** @deprecated use `DeleteProfileGoneLinks$Outbound` instead. */
  export type Outbound = DeleteProfileGoneLinks$Outbound;
}

export function deleteProfileGoneLinksToJSON(
  deleteProfileGoneLinks: DeleteProfileGoneLinks,
): string {
  return JSON.stringify(
    DeleteProfileGoneLinks$outboundSchema.parse(deleteProfileGoneLinks),
  );
}

export function deleteProfileGoneLinksFromJSON(
  jsonString: string,
): SafeParseResult<DeleteProfileGoneLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteProfileGoneLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteProfileGoneLinks' from JSON`,
  );
}

/** @internal */
export const DeleteProfileNotFoundDocumentation$inboundSchema: z.ZodType<
  DeleteProfileNotFoundDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type DeleteProfileNotFoundDocumentation$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const DeleteProfileNotFoundDocumentation$outboundSchema: z.ZodType<
  DeleteProfileNotFoundDocumentation$Outbound,
  z.ZodTypeDef,
  DeleteProfileNotFoundDocumentation
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteProfileNotFoundDocumentation$ {
  /** @deprecated use `DeleteProfileNotFoundDocumentation$inboundSchema` instead. */
  export const inboundSchema = DeleteProfileNotFoundDocumentation$inboundSchema;
  /** @deprecated use `DeleteProfileNotFoundDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    DeleteProfileNotFoundDocumentation$outboundSchema;
  /** @deprecated use `DeleteProfileNotFoundDocumentation$Outbound` instead. */
  export type Outbound = DeleteProfileNotFoundDocumentation$Outbound;
}

export function deleteProfileNotFoundDocumentationToJSON(
  deleteProfileNotFoundDocumentation: DeleteProfileNotFoundDocumentation,
): string {
  return JSON.stringify(
    DeleteProfileNotFoundDocumentation$outboundSchema.parse(
      deleteProfileNotFoundDocumentation,
    ),
  );
}

export function deleteProfileNotFoundDocumentationFromJSON(
  jsonString: string,
): SafeParseResult<DeleteProfileNotFoundDocumentation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteProfileNotFoundDocumentation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteProfileNotFoundDocumentation' from JSON`,
  );
}

/** @internal */
export const DeleteProfileNotFoundLinks$inboundSchema: z.ZodType<
  DeleteProfileNotFoundLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() => DeleteProfileNotFoundDocumentation$inboundSchema),
});

/** @internal */
export type DeleteProfileNotFoundLinks$Outbound = {
  documentation: DeleteProfileNotFoundDocumentation$Outbound;
};

/** @internal */
export const DeleteProfileNotFoundLinks$outboundSchema: z.ZodType<
  DeleteProfileNotFoundLinks$Outbound,
  z.ZodTypeDef,
  DeleteProfileNotFoundLinks
> = z.object({
  documentation: z.lazy(() =>
    DeleteProfileNotFoundDocumentation$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteProfileNotFoundLinks$ {
  /** @deprecated use `DeleteProfileNotFoundLinks$inboundSchema` instead. */
  export const inboundSchema = DeleteProfileNotFoundLinks$inboundSchema;
  /** @deprecated use `DeleteProfileNotFoundLinks$outboundSchema` instead. */
  export const outboundSchema = DeleteProfileNotFoundLinks$outboundSchema;
  /** @deprecated use `DeleteProfileNotFoundLinks$Outbound` instead. */
  export type Outbound = DeleteProfileNotFoundLinks$Outbound;
}

export function deleteProfileNotFoundLinksToJSON(
  deleteProfileNotFoundLinks: DeleteProfileNotFoundLinks,
): string {
  return JSON.stringify(
    DeleteProfileNotFoundLinks$outboundSchema.parse(deleteProfileNotFoundLinks),
  );
}

export function deleteProfileNotFoundLinksFromJSON(
  jsonString: string,
): SafeParseResult<DeleteProfileNotFoundLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteProfileNotFoundLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteProfileNotFoundLinks' from JSON`,
  );
}
