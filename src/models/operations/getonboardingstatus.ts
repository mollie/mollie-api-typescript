/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The current status of the organization's onboarding process.
 *
 * @remarks
 *
 * * `needs-data` — The merchant needs to provide additional information
 * * `in-review` — The merchant provided all information, awaiting review from Mollie
 * * `completed` — The onboarding is completed
 */
export const GetOnboardingStatusStatus = {
  NeedsData: "needs-data",
  InReview: "in-review",
  Completed: "completed",
} as const;
/**
 * The current status of the organization's onboarding process.
 *
 * @remarks
 *
 * * `needs-data` — The merchant needs to provide additional information
 * * `in-review` — The merchant provided all information, awaiting review from Mollie
 * * `completed` — The onboarding is completed
 */
export type GetOnboardingStatusStatus = ClosedEnum<
  typeof GetOnboardingStatusStatus
>;

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type GetOnboardingStatusSelf = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * Direct link to the onboarding process in the Mollie dashboard. The merchant can be redirected to this page to
 *
 * @remarks
 * complete their onboarding.
 */
export type GetOnboardingStatusDashboard = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * The API resource URL of the organization.
 */
export type GetOnboardingStatusOrganization = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type GetOnboardingStatusDocumentation = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
export type GetOnboardingStatusLinks = {
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  self?: GetOnboardingStatusSelf | undefined;
  /**
   * Direct link to the onboarding process in the Mollie dashboard. The merchant can be redirected to this page to
   *
   * @remarks
   * complete their onboarding.
   */
  dashboard?: GetOnboardingStatusDashboard | undefined;
  /**
   * The API resource URL of the organization.
   */
  organization?: GetOnboardingStatusOrganization | undefined;
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  documentation?: GetOnboardingStatusDocumentation | undefined;
};

/**
 * The onboarding status object of the current organization.
 */
export type GetOnboardingStatusResponse = {
  /**
   * Indicates the response contains an onboarding status object. Will always contain the string `onboarding` for this
   *
   * @remarks
   * resource type.
   */
  resource?: string | undefined;
  /**
   * The name of the organization.
   */
  name?: string | undefined;
  /**
   * The current status of the organization's onboarding process.
   *
   * @remarks
   *
   * * `needs-data` — The merchant needs to provide additional information
   * * `in-review` — The merchant provided all information, awaiting review from Mollie
   * * `completed` — The onboarding is completed
   */
  status?: GetOnboardingStatusStatus | undefined;
  /**
   * Whether the organization can receive payments.
   */
  canReceivePayments?: boolean | undefined;
  /**
   * Whether the organization can receive settlements to their external bank account.
   */
  canReceiveSettlements?: boolean | undefined;
  /**
   * The sign up date time of the organization in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  signedUpAt?: string | undefined;
  /**
   * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
   */
  links?: GetOnboardingStatusLinks | undefined;
};

/** @internal */
export const GetOnboardingStatusStatus$inboundSchema: z.ZodNativeEnum<
  typeof GetOnboardingStatusStatus
> = z.nativeEnum(GetOnboardingStatusStatus);

/** @internal */
export const GetOnboardingStatusStatus$outboundSchema: z.ZodNativeEnum<
  typeof GetOnboardingStatusStatus
> = GetOnboardingStatusStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOnboardingStatusStatus$ {
  /** @deprecated use `GetOnboardingStatusStatus$inboundSchema` instead. */
  export const inboundSchema = GetOnboardingStatusStatus$inboundSchema;
  /** @deprecated use `GetOnboardingStatusStatus$outboundSchema` instead. */
  export const outboundSchema = GetOnboardingStatusStatus$outboundSchema;
}

/** @internal */
export const GetOnboardingStatusSelf$inboundSchema: z.ZodType<
  GetOnboardingStatusSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetOnboardingStatusSelf$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetOnboardingStatusSelf$outboundSchema: z.ZodType<
  GetOnboardingStatusSelf$Outbound,
  z.ZodTypeDef,
  GetOnboardingStatusSelf
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOnboardingStatusSelf$ {
  /** @deprecated use `GetOnboardingStatusSelf$inboundSchema` instead. */
  export const inboundSchema = GetOnboardingStatusSelf$inboundSchema;
  /** @deprecated use `GetOnboardingStatusSelf$outboundSchema` instead. */
  export const outboundSchema = GetOnboardingStatusSelf$outboundSchema;
  /** @deprecated use `GetOnboardingStatusSelf$Outbound` instead. */
  export type Outbound = GetOnboardingStatusSelf$Outbound;
}

export function getOnboardingStatusSelfToJSON(
  getOnboardingStatusSelf: GetOnboardingStatusSelf,
): string {
  return JSON.stringify(
    GetOnboardingStatusSelf$outboundSchema.parse(getOnboardingStatusSelf),
  );
}

export function getOnboardingStatusSelfFromJSON(
  jsonString: string,
): SafeParseResult<GetOnboardingStatusSelf, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOnboardingStatusSelf$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOnboardingStatusSelf' from JSON`,
  );
}

/** @internal */
export const GetOnboardingStatusDashboard$inboundSchema: z.ZodType<
  GetOnboardingStatusDashboard,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetOnboardingStatusDashboard$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetOnboardingStatusDashboard$outboundSchema: z.ZodType<
  GetOnboardingStatusDashboard$Outbound,
  z.ZodTypeDef,
  GetOnboardingStatusDashboard
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOnboardingStatusDashboard$ {
  /** @deprecated use `GetOnboardingStatusDashboard$inboundSchema` instead. */
  export const inboundSchema = GetOnboardingStatusDashboard$inboundSchema;
  /** @deprecated use `GetOnboardingStatusDashboard$outboundSchema` instead. */
  export const outboundSchema = GetOnboardingStatusDashboard$outboundSchema;
  /** @deprecated use `GetOnboardingStatusDashboard$Outbound` instead. */
  export type Outbound = GetOnboardingStatusDashboard$Outbound;
}

export function getOnboardingStatusDashboardToJSON(
  getOnboardingStatusDashboard: GetOnboardingStatusDashboard,
): string {
  return JSON.stringify(
    GetOnboardingStatusDashboard$outboundSchema.parse(
      getOnboardingStatusDashboard,
    ),
  );
}

export function getOnboardingStatusDashboardFromJSON(
  jsonString: string,
): SafeParseResult<GetOnboardingStatusDashboard, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOnboardingStatusDashboard$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOnboardingStatusDashboard' from JSON`,
  );
}

/** @internal */
export const GetOnboardingStatusOrganization$inboundSchema: z.ZodType<
  GetOnboardingStatusOrganization,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetOnboardingStatusOrganization$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetOnboardingStatusOrganization$outboundSchema: z.ZodType<
  GetOnboardingStatusOrganization$Outbound,
  z.ZodTypeDef,
  GetOnboardingStatusOrganization
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOnboardingStatusOrganization$ {
  /** @deprecated use `GetOnboardingStatusOrganization$inboundSchema` instead. */
  export const inboundSchema = GetOnboardingStatusOrganization$inboundSchema;
  /** @deprecated use `GetOnboardingStatusOrganization$outboundSchema` instead. */
  export const outboundSchema = GetOnboardingStatusOrganization$outboundSchema;
  /** @deprecated use `GetOnboardingStatusOrganization$Outbound` instead. */
  export type Outbound = GetOnboardingStatusOrganization$Outbound;
}

export function getOnboardingStatusOrganizationToJSON(
  getOnboardingStatusOrganization: GetOnboardingStatusOrganization,
): string {
  return JSON.stringify(
    GetOnboardingStatusOrganization$outboundSchema.parse(
      getOnboardingStatusOrganization,
    ),
  );
}

export function getOnboardingStatusOrganizationFromJSON(
  jsonString: string,
): SafeParseResult<GetOnboardingStatusOrganization, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOnboardingStatusOrganization$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOnboardingStatusOrganization' from JSON`,
  );
}

/** @internal */
export const GetOnboardingStatusDocumentation$inboundSchema: z.ZodType<
  GetOnboardingStatusDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetOnboardingStatusDocumentation$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetOnboardingStatusDocumentation$outboundSchema: z.ZodType<
  GetOnboardingStatusDocumentation$Outbound,
  z.ZodTypeDef,
  GetOnboardingStatusDocumentation
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOnboardingStatusDocumentation$ {
  /** @deprecated use `GetOnboardingStatusDocumentation$inboundSchema` instead. */
  export const inboundSchema = GetOnboardingStatusDocumentation$inboundSchema;
  /** @deprecated use `GetOnboardingStatusDocumentation$outboundSchema` instead. */
  export const outboundSchema = GetOnboardingStatusDocumentation$outboundSchema;
  /** @deprecated use `GetOnboardingStatusDocumentation$Outbound` instead. */
  export type Outbound = GetOnboardingStatusDocumentation$Outbound;
}

export function getOnboardingStatusDocumentationToJSON(
  getOnboardingStatusDocumentation: GetOnboardingStatusDocumentation,
): string {
  return JSON.stringify(
    GetOnboardingStatusDocumentation$outboundSchema.parse(
      getOnboardingStatusDocumentation,
    ),
  );
}

export function getOnboardingStatusDocumentationFromJSON(
  jsonString: string,
): SafeParseResult<GetOnboardingStatusDocumentation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOnboardingStatusDocumentation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOnboardingStatusDocumentation' from JSON`,
  );
}

/** @internal */
export const GetOnboardingStatusLinks$inboundSchema: z.ZodType<
  GetOnboardingStatusLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => GetOnboardingStatusSelf$inboundSchema).optional(),
  dashboard: z.lazy(() => GetOnboardingStatusDashboard$inboundSchema)
    .optional(),
  organization: z.lazy(() => GetOnboardingStatusOrganization$inboundSchema)
    .optional(),
  documentation: z.lazy(() => GetOnboardingStatusDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type GetOnboardingStatusLinks$Outbound = {
  self?: GetOnboardingStatusSelf$Outbound | undefined;
  dashboard?: GetOnboardingStatusDashboard$Outbound | undefined;
  organization?: GetOnboardingStatusOrganization$Outbound | undefined;
  documentation?: GetOnboardingStatusDocumentation$Outbound | undefined;
};

/** @internal */
export const GetOnboardingStatusLinks$outboundSchema: z.ZodType<
  GetOnboardingStatusLinks$Outbound,
  z.ZodTypeDef,
  GetOnboardingStatusLinks
> = z.object({
  self: z.lazy(() => GetOnboardingStatusSelf$outboundSchema).optional(),
  dashboard: z.lazy(() => GetOnboardingStatusDashboard$outboundSchema)
    .optional(),
  organization: z.lazy(() => GetOnboardingStatusOrganization$outboundSchema)
    .optional(),
  documentation: z.lazy(() => GetOnboardingStatusDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOnboardingStatusLinks$ {
  /** @deprecated use `GetOnboardingStatusLinks$inboundSchema` instead. */
  export const inboundSchema = GetOnboardingStatusLinks$inboundSchema;
  /** @deprecated use `GetOnboardingStatusLinks$outboundSchema` instead. */
  export const outboundSchema = GetOnboardingStatusLinks$outboundSchema;
  /** @deprecated use `GetOnboardingStatusLinks$Outbound` instead. */
  export type Outbound = GetOnboardingStatusLinks$Outbound;
}

export function getOnboardingStatusLinksToJSON(
  getOnboardingStatusLinks: GetOnboardingStatusLinks,
): string {
  return JSON.stringify(
    GetOnboardingStatusLinks$outboundSchema.parse(getOnboardingStatusLinks),
  );
}

export function getOnboardingStatusLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetOnboardingStatusLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOnboardingStatusLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOnboardingStatusLinks' from JSON`,
  );
}

/** @internal */
export const GetOnboardingStatusResponse$inboundSchema: z.ZodType<
  GetOnboardingStatusResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource: z.string().optional(),
  name: z.string().optional(),
  status: GetOnboardingStatusStatus$inboundSchema.optional(),
  canReceivePayments: z.boolean().optional(),
  canReceiveSettlements: z.boolean().optional(),
  signedUpAt: z.string().optional(),
  _links: z.lazy(() => GetOnboardingStatusLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type GetOnboardingStatusResponse$Outbound = {
  resource?: string | undefined;
  name?: string | undefined;
  status?: string | undefined;
  canReceivePayments?: boolean | undefined;
  canReceiveSettlements?: boolean | undefined;
  signedUpAt?: string | undefined;
  _links?: GetOnboardingStatusLinks$Outbound | undefined;
};

/** @internal */
export const GetOnboardingStatusResponse$outboundSchema: z.ZodType<
  GetOnboardingStatusResponse$Outbound,
  z.ZodTypeDef,
  GetOnboardingStatusResponse
> = z.object({
  resource: z.string().optional(),
  name: z.string().optional(),
  status: GetOnboardingStatusStatus$outboundSchema.optional(),
  canReceivePayments: z.boolean().optional(),
  canReceiveSettlements: z.boolean().optional(),
  signedUpAt: z.string().optional(),
  links: z.lazy(() => GetOnboardingStatusLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOnboardingStatusResponse$ {
  /** @deprecated use `GetOnboardingStatusResponse$inboundSchema` instead. */
  export const inboundSchema = GetOnboardingStatusResponse$inboundSchema;
  /** @deprecated use `GetOnboardingStatusResponse$outboundSchema` instead. */
  export const outboundSchema = GetOnboardingStatusResponse$outboundSchema;
  /** @deprecated use `GetOnboardingStatusResponse$Outbound` instead. */
  export type Outbound = GetOnboardingStatusResponse$Outbound;
}

export function getOnboardingStatusResponseToJSON(
  getOnboardingStatusResponse: GetOnboardingStatusResponse,
): string {
  return JSON.stringify(
    GetOnboardingStatusResponse$outboundSchema.parse(
      getOnboardingStatusResponse,
    ),
  );
}

export function getOnboardingStatusResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetOnboardingStatusResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOnboardingStatusResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOnboardingStatusResponse' from JSON`,
  );
}
