/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Whether this entity was created in live mode or in test mode.
 */
export const GetCurrentProfileMode = {
  Live: "live",
  Test: "test",
} as const;
/**
 * Whether this entity was created in live mode or in test mode.
 */
export type GetCurrentProfileMode = ClosedEnum<typeof GetCurrentProfileMode>;

/**
 * The profile status determines whether the profile is able to receive live payments.
 *
 * @remarks
 *
 * * `unverified`: The profile has not been verified yet and can only be used to create test payments.
 * * `verified`: The profile has been verified and can be used to create live payments and test payments.
 * * `blocked`: The profile is blocked and can no longer be used or changed.
 */
export const GetCurrentProfileStatus = {
  Unverified: "unverified",
  Verified: "verified",
  Blocked: "blocked",
} as const;
/**
 * The profile status determines whether the profile is able to receive live payments.
 *
 * @remarks
 *
 * * `unverified`: The profile has not been verified yet and can only be used to create test payments.
 * * `verified`: The profile has been verified and can be used to create live payments and test payments.
 * * `blocked`: The profile is blocked and can no longer be used or changed.
 */
export type GetCurrentProfileStatus = ClosedEnum<
  typeof GetCurrentProfileStatus
>;

/**
 * The status of the requested changes.
 */
export const GetCurrentProfileReviewStatus = {
  Pending: "pending",
  Rejected: "rejected",
} as const;
/**
 * The status of the requested changes.
 */
export type GetCurrentProfileReviewStatus = ClosedEnum<
  typeof GetCurrentProfileReviewStatus
>;

/**
 * Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
 *
 * @remarks
 * automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
 * `null` in test mode.
 */
export type GetCurrentProfileReview = {
  /**
   * The status of the requested changes.
   */
  status?: GetCurrentProfileReviewStatus | undefined;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type GetCurrentProfileSelf = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * Link to the profile in the Mollie dashboard.
 */
export type GetCurrentProfileDashboard = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * The API resource URL of the chargebacks that belong to this profile.
 */
export type GetCurrentProfileChargebacks = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * The API resource URL of the methods that are enabled for this profile.
 */
export type GetCurrentProfileMethods = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * The API resource URL of the payments that belong to this profile.
 */
export type GetCurrentProfilePayments = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * The API resource URL of the refunds that belong to this profile.
 */
export type GetCurrentProfileRefunds = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * The hosted checkout preview URL. You need to be logged in to access this page.
 */
export type GetCurrentProfileCheckoutPreviewUrl = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type GetCurrentProfileDocumentation = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
export type GetCurrentProfileLinks = {
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  self?: GetCurrentProfileSelf | undefined;
  /**
   * Link to the profile in the Mollie dashboard.
   */
  dashboard?: GetCurrentProfileDashboard | undefined;
  /**
   * The API resource URL of the chargebacks that belong to this profile.
   */
  chargebacks?: GetCurrentProfileChargebacks | undefined;
  /**
   * The API resource URL of the methods that are enabled for this profile.
   */
  methods?: GetCurrentProfileMethods | undefined;
  /**
   * The API resource URL of the payments that belong to this profile.
   */
  payments?: GetCurrentProfilePayments | undefined;
  /**
   * The API resource URL of the refunds that belong to this profile.
   */
  refunds?: GetCurrentProfileRefunds | undefined;
  /**
   * The hosted checkout preview URL. You need to be logged in to access this page.
   */
  checkoutPreviewUrl?: GetCurrentProfileCheckoutPreviewUrl | undefined;
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  documentation?: GetCurrentProfileDocumentation | undefined;
};

/**
 * The current profile object. For a complete reference of the profile object, refer to the
 *
 * @remarks
 * [Get profile](get-profile) endpoint documentation.
 */
export type GetCurrentProfileResponse = {
  /**
   * Indicates the response contains a profile object. Will always contain the string `profile` for this endpoint.
   */
  resource?: string | undefined;
  /**
   * The identifier uniquely referring to this profile. Example: `pfl_v9hTwCvYqw`.
   */
  id?: string | undefined;
  /**
   * Whether this entity was created in live mode or in test mode.
   */
  mode?: GetCurrentProfileMode | undefined;
  /**
   * The profile's name, this will usually reflect the trade name or brand name of the profile's website or
   *
   * @remarks
   * application.
   */
  name?: string | undefined;
  /**
   * The URL to the profile's website or application. Only `https` or `http` URLs are allowed. No `@` signs are
   *
   * @remarks
   * allowed.
   */
  website?: string | undefined;
  /**
   * The email address associated with the profile's trade name or brand.
   */
  email?: string | undefined;
  /**
   * The phone number associated with the profile's trade name or brand.
   */
  phone?: string | undefined;
  /**
   * The products or services offered by the profile's website or application.
   */
  description?: string | undefined;
  /**
   * A list of countries where you expect that the majority of the profile's customers reside,
   *
   * @remarks
   * in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
   */
  countriesOfActivity?: Array<string> | undefined;
  /**
   * The industry associated with the profile's trade name or brand. Please refer to the
   *
   * @remarks
   * [business category list](common-data-types#business-category) for all possible options.
   */
  businessCategory?: string | undefined;
  /**
   * The profile status determines whether the profile is able to receive live payments.
   *
   * @remarks
   *
   * * `unverified`: The profile has not been verified yet and can only be used to create test payments.
   * * `verified`: The profile has been verified and can be used to create live payments and test payments.
   * * `blocked`: The profile is blocked and can no longer be used or changed.
   */
  status?: GetCurrentProfileStatus | undefined;
  /**
   * Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
   *
   * @remarks
   * automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
   * `null` in test mode.
   */
  review?: GetCurrentProfileReview | undefined;
  /**
   * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  createdAt?: string | undefined;
  /**
   * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
   */
  links?: GetCurrentProfileLinks | undefined;
};

/** @internal */
export const GetCurrentProfileMode$inboundSchema: z.ZodNativeEnum<
  typeof GetCurrentProfileMode
> = z.nativeEnum(GetCurrentProfileMode);

/** @internal */
export const GetCurrentProfileMode$outboundSchema: z.ZodNativeEnum<
  typeof GetCurrentProfileMode
> = GetCurrentProfileMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileMode$ {
  /** @deprecated use `GetCurrentProfileMode$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileMode$inboundSchema;
  /** @deprecated use `GetCurrentProfileMode$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileMode$outboundSchema;
}

/** @internal */
export const GetCurrentProfileStatus$inboundSchema: z.ZodNativeEnum<
  typeof GetCurrentProfileStatus
> = z.nativeEnum(GetCurrentProfileStatus);

/** @internal */
export const GetCurrentProfileStatus$outboundSchema: z.ZodNativeEnum<
  typeof GetCurrentProfileStatus
> = GetCurrentProfileStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileStatus$ {
  /** @deprecated use `GetCurrentProfileStatus$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileStatus$inboundSchema;
  /** @deprecated use `GetCurrentProfileStatus$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileStatus$outboundSchema;
}

/** @internal */
export const GetCurrentProfileReviewStatus$inboundSchema: z.ZodNativeEnum<
  typeof GetCurrentProfileReviewStatus
> = z.nativeEnum(GetCurrentProfileReviewStatus);

/** @internal */
export const GetCurrentProfileReviewStatus$outboundSchema: z.ZodNativeEnum<
  typeof GetCurrentProfileReviewStatus
> = GetCurrentProfileReviewStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileReviewStatus$ {
  /** @deprecated use `GetCurrentProfileReviewStatus$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileReviewStatus$inboundSchema;
  /** @deprecated use `GetCurrentProfileReviewStatus$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileReviewStatus$outboundSchema;
}

/** @internal */
export const GetCurrentProfileReview$inboundSchema: z.ZodType<
  GetCurrentProfileReview,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: GetCurrentProfileReviewStatus$inboundSchema.optional(),
});

/** @internal */
export type GetCurrentProfileReview$Outbound = {
  status?: string | undefined;
};

/** @internal */
export const GetCurrentProfileReview$outboundSchema: z.ZodType<
  GetCurrentProfileReview$Outbound,
  z.ZodTypeDef,
  GetCurrentProfileReview
> = z.object({
  status: GetCurrentProfileReviewStatus$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileReview$ {
  /** @deprecated use `GetCurrentProfileReview$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileReview$inboundSchema;
  /** @deprecated use `GetCurrentProfileReview$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileReview$outboundSchema;
  /** @deprecated use `GetCurrentProfileReview$Outbound` instead. */
  export type Outbound = GetCurrentProfileReview$Outbound;
}

export function getCurrentProfileReviewToJSON(
  getCurrentProfileReview: GetCurrentProfileReview,
): string {
  return JSON.stringify(
    GetCurrentProfileReview$outboundSchema.parse(getCurrentProfileReview),
  );
}

export function getCurrentProfileReviewFromJSON(
  jsonString: string,
): SafeParseResult<GetCurrentProfileReview, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCurrentProfileReview$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCurrentProfileReview' from JSON`,
  );
}

/** @internal */
export const GetCurrentProfileSelf$inboundSchema: z.ZodType<
  GetCurrentProfileSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetCurrentProfileSelf$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetCurrentProfileSelf$outboundSchema: z.ZodType<
  GetCurrentProfileSelf$Outbound,
  z.ZodTypeDef,
  GetCurrentProfileSelf
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileSelf$ {
  /** @deprecated use `GetCurrentProfileSelf$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileSelf$inboundSchema;
  /** @deprecated use `GetCurrentProfileSelf$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileSelf$outboundSchema;
  /** @deprecated use `GetCurrentProfileSelf$Outbound` instead. */
  export type Outbound = GetCurrentProfileSelf$Outbound;
}

export function getCurrentProfileSelfToJSON(
  getCurrentProfileSelf: GetCurrentProfileSelf,
): string {
  return JSON.stringify(
    GetCurrentProfileSelf$outboundSchema.parse(getCurrentProfileSelf),
  );
}

export function getCurrentProfileSelfFromJSON(
  jsonString: string,
): SafeParseResult<GetCurrentProfileSelf, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCurrentProfileSelf$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCurrentProfileSelf' from JSON`,
  );
}

/** @internal */
export const GetCurrentProfileDashboard$inboundSchema: z.ZodType<
  GetCurrentProfileDashboard,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetCurrentProfileDashboard$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetCurrentProfileDashboard$outboundSchema: z.ZodType<
  GetCurrentProfileDashboard$Outbound,
  z.ZodTypeDef,
  GetCurrentProfileDashboard
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileDashboard$ {
  /** @deprecated use `GetCurrentProfileDashboard$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileDashboard$inboundSchema;
  /** @deprecated use `GetCurrentProfileDashboard$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileDashboard$outboundSchema;
  /** @deprecated use `GetCurrentProfileDashboard$Outbound` instead. */
  export type Outbound = GetCurrentProfileDashboard$Outbound;
}

export function getCurrentProfileDashboardToJSON(
  getCurrentProfileDashboard: GetCurrentProfileDashboard,
): string {
  return JSON.stringify(
    GetCurrentProfileDashboard$outboundSchema.parse(getCurrentProfileDashboard),
  );
}

export function getCurrentProfileDashboardFromJSON(
  jsonString: string,
): SafeParseResult<GetCurrentProfileDashboard, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCurrentProfileDashboard$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCurrentProfileDashboard' from JSON`,
  );
}

/** @internal */
export const GetCurrentProfileChargebacks$inboundSchema: z.ZodType<
  GetCurrentProfileChargebacks,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetCurrentProfileChargebacks$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetCurrentProfileChargebacks$outboundSchema: z.ZodType<
  GetCurrentProfileChargebacks$Outbound,
  z.ZodTypeDef,
  GetCurrentProfileChargebacks
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileChargebacks$ {
  /** @deprecated use `GetCurrentProfileChargebacks$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileChargebacks$inboundSchema;
  /** @deprecated use `GetCurrentProfileChargebacks$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileChargebacks$outboundSchema;
  /** @deprecated use `GetCurrentProfileChargebacks$Outbound` instead. */
  export type Outbound = GetCurrentProfileChargebacks$Outbound;
}

export function getCurrentProfileChargebacksToJSON(
  getCurrentProfileChargebacks: GetCurrentProfileChargebacks,
): string {
  return JSON.stringify(
    GetCurrentProfileChargebacks$outboundSchema.parse(
      getCurrentProfileChargebacks,
    ),
  );
}

export function getCurrentProfileChargebacksFromJSON(
  jsonString: string,
): SafeParseResult<GetCurrentProfileChargebacks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCurrentProfileChargebacks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCurrentProfileChargebacks' from JSON`,
  );
}

/** @internal */
export const GetCurrentProfileMethods$inboundSchema: z.ZodType<
  GetCurrentProfileMethods,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetCurrentProfileMethods$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetCurrentProfileMethods$outboundSchema: z.ZodType<
  GetCurrentProfileMethods$Outbound,
  z.ZodTypeDef,
  GetCurrentProfileMethods
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileMethods$ {
  /** @deprecated use `GetCurrentProfileMethods$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileMethods$inboundSchema;
  /** @deprecated use `GetCurrentProfileMethods$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileMethods$outboundSchema;
  /** @deprecated use `GetCurrentProfileMethods$Outbound` instead. */
  export type Outbound = GetCurrentProfileMethods$Outbound;
}

export function getCurrentProfileMethodsToJSON(
  getCurrentProfileMethods: GetCurrentProfileMethods,
): string {
  return JSON.stringify(
    GetCurrentProfileMethods$outboundSchema.parse(getCurrentProfileMethods),
  );
}

export function getCurrentProfileMethodsFromJSON(
  jsonString: string,
): SafeParseResult<GetCurrentProfileMethods, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCurrentProfileMethods$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCurrentProfileMethods' from JSON`,
  );
}

/** @internal */
export const GetCurrentProfilePayments$inboundSchema: z.ZodType<
  GetCurrentProfilePayments,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetCurrentProfilePayments$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetCurrentProfilePayments$outboundSchema: z.ZodType<
  GetCurrentProfilePayments$Outbound,
  z.ZodTypeDef,
  GetCurrentProfilePayments
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfilePayments$ {
  /** @deprecated use `GetCurrentProfilePayments$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfilePayments$inboundSchema;
  /** @deprecated use `GetCurrentProfilePayments$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfilePayments$outboundSchema;
  /** @deprecated use `GetCurrentProfilePayments$Outbound` instead. */
  export type Outbound = GetCurrentProfilePayments$Outbound;
}

export function getCurrentProfilePaymentsToJSON(
  getCurrentProfilePayments: GetCurrentProfilePayments,
): string {
  return JSON.stringify(
    GetCurrentProfilePayments$outboundSchema.parse(getCurrentProfilePayments),
  );
}

export function getCurrentProfilePaymentsFromJSON(
  jsonString: string,
): SafeParseResult<GetCurrentProfilePayments, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCurrentProfilePayments$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCurrentProfilePayments' from JSON`,
  );
}

/** @internal */
export const GetCurrentProfileRefunds$inboundSchema: z.ZodType<
  GetCurrentProfileRefunds,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetCurrentProfileRefunds$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetCurrentProfileRefunds$outboundSchema: z.ZodType<
  GetCurrentProfileRefunds$Outbound,
  z.ZodTypeDef,
  GetCurrentProfileRefunds
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileRefunds$ {
  /** @deprecated use `GetCurrentProfileRefunds$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileRefunds$inboundSchema;
  /** @deprecated use `GetCurrentProfileRefunds$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileRefunds$outboundSchema;
  /** @deprecated use `GetCurrentProfileRefunds$Outbound` instead. */
  export type Outbound = GetCurrentProfileRefunds$Outbound;
}

export function getCurrentProfileRefundsToJSON(
  getCurrentProfileRefunds: GetCurrentProfileRefunds,
): string {
  return JSON.stringify(
    GetCurrentProfileRefunds$outboundSchema.parse(getCurrentProfileRefunds),
  );
}

export function getCurrentProfileRefundsFromJSON(
  jsonString: string,
): SafeParseResult<GetCurrentProfileRefunds, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCurrentProfileRefunds$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCurrentProfileRefunds' from JSON`,
  );
}

/** @internal */
export const GetCurrentProfileCheckoutPreviewUrl$inboundSchema: z.ZodType<
  GetCurrentProfileCheckoutPreviewUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetCurrentProfileCheckoutPreviewUrl$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetCurrentProfileCheckoutPreviewUrl$outboundSchema: z.ZodType<
  GetCurrentProfileCheckoutPreviewUrl$Outbound,
  z.ZodTypeDef,
  GetCurrentProfileCheckoutPreviewUrl
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileCheckoutPreviewUrl$ {
  /** @deprecated use `GetCurrentProfileCheckoutPreviewUrl$inboundSchema` instead. */
  export const inboundSchema =
    GetCurrentProfileCheckoutPreviewUrl$inboundSchema;
  /** @deprecated use `GetCurrentProfileCheckoutPreviewUrl$outboundSchema` instead. */
  export const outboundSchema =
    GetCurrentProfileCheckoutPreviewUrl$outboundSchema;
  /** @deprecated use `GetCurrentProfileCheckoutPreviewUrl$Outbound` instead. */
  export type Outbound = GetCurrentProfileCheckoutPreviewUrl$Outbound;
}

export function getCurrentProfileCheckoutPreviewUrlToJSON(
  getCurrentProfileCheckoutPreviewUrl: GetCurrentProfileCheckoutPreviewUrl,
): string {
  return JSON.stringify(
    GetCurrentProfileCheckoutPreviewUrl$outboundSchema.parse(
      getCurrentProfileCheckoutPreviewUrl,
    ),
  );
}

export function getCurrentProfileCheckoutPreviewUrlFromJSON(
  jsonString: string,
): SafeParseResult<GetCurrentProfileCheckoutPreviewUrl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetCurrentProfileCheckoutPreviewUrl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCurrentProfileCheckoutPreviewUrl' from JSON`,
  );
}

/** @internal */
export const GetCurrentProfileDocumentation$inboundSchema: z.ZodType<
  GetCurrentProfileDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type GetCurrentProfileDocumentation$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const GetCurrentProfileDocumentation$outboundSchema: z.ZodType<
  GetCurrentProfileDocumentation$Outbound,
  z.ZodTypeDef,
  GetCurrentProfileDocumentation
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileDocumentation$ {
  /** @deprecated use `GetCurrentProfileDocumentation$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileDocumentation$inboundSchema;
  /** @deprecated use `GetCurrentProfileDocumentation$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileDocumentation$outboundSchema;
  /** @deprecated use `GetCurrentProfileDocumentation$Outbound` instead. */
  export type Outbound = GetCurrentProfileDocumentation$Outbound;
}

export function getCurrentProfileDocumentationToJSON(
  getCurrentProfileDocumentation: GetCurrentProfileDocumentation,
): string {
  return JSON.stringify(
    GetCurrentProfileDocumentation$outboundSchema.parse(
      getCurrentProfileDocumentation,
    ),
  );
}

export function getCurrentProfileDocumentationFromJSON(
  jsonString: string,
): SafeParseResult<GetCurrentProfileDocumentation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCurrentProfileDocumentation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCurrentProfileDocumentation' from JSON`,
  );
}

/** @internal */
export const GetCurrentProfileLinks$inboundSchema: z.ZodType<
  GetCurrentProfileLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => GetCurrentProfileSelf$inboundSchema).optional(),
  dashboard: z.lazy(() => GetCurrentProfileDashboard$inboundSchema).optional(),
  chargebacks: z.lazy(() => GetCurrentProfileChargebacks$inboundSchema)
    .optional(),
  methods: z.lazy(() => GetCurrentProfileMethods$inboundSchema).optional(),
  payments: z.lazy(() => GetCurrentProfilePayments$inboundSchema).optional(),
  refunds: z.lazy(() => GetCurrentProfileRefunds$inboundSchema).optional(),
  checkoutPreviewUrl: z.lazy(() =>
    GetCurrentProfileCheckoutPreviewUrl$inboundSchema
  ).optional(),
  documentation: z.lazy(() => GetCurrentProfileDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type GetCurrentProfileLinks$Outbound = {
  self?: GetCurrentProfileSelf$Outbound | undefined;
  dashboard?: GetCurrentProfileDashboard$Outbound | undefined;
  chargebacks?: GetCurrentProfileChargebacks$Outbound | undefined;
  methods?: GetCurrentProfileMethods$Outbound | undefined;
  payments?: GetCurrentProfilePayments$Outbound | undefined;
  refunds?: GetCurrentProfileRefunds$Outbound | undefined;
  checkoutPreviewUrl?: GetCurrentProfileCheckoutPreviewUrl$Outbound | undefined;
  documentation?: GetCurrentProfileDocumentation$Outbound | undefined;
};

/** @internal */
export const GetCurrentProfileLinks$outboundSchema: z.ZodType<
  GetCurrentProfileLinks$Outbound,
  z.ZodTypeDef,
  GetCurrentProfileLinks
> = z.object({
  self: z.lazy(() => GetCurrentProfileSelf$outboundSchema).optional(),
  dashboard: z.lazy(() => GetCurrentProfileDashboard$outboundSchema).optional(),
  chargebacks: z.lazy(() => GetCurrentProfileChargebacks$outboundSchema)
    .optional(),
  methods: z.lazy(() => GetCurrentProfileMethods$outboundSchema).optional(),
  payments: z.lazy(() => GetCurrentProfilePayments$outboundSchema).optional(),
  refunds: z.lazy(() => GetCurrentProfileRefunds$outboundSchema).optional(),
  checkoutPreviewUrl: z.lazy(() =>
    GetCurrentProfileCheckoutPreviewUrl$outboundSchema
  ).optional(),
  documentation: z.lazy(() => GetCurrentProfileDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileLinks$ {
  /** @deprecated use `GetCurrentProfileLinks$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileLinks$inboundSchema;
  /** @deprecated use `GetCurrentProfileLinks$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileLinks$outboundSchema;
  /** @deprecated use `GetCurrentProfileLinks$Outbound` instead. */
  export type Outbound = GetCurrentProfileLinks$Outbound;
}

export function getCurrentProfileLinksToJSON(
  getCurrentProfileLinks: GetCurrentProfileLinks,
): string {
  return JSON.stringify(
    GetCurrentProfileLinks$outboundSchema.parse(getCurrentProfileLinks),
  );
}

export function getCurrentProfileLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetCurrentProfileLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCurrentProfileLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCurrentProfileLinks' from JSON`,
  );
}

/** @internal */
export const GetCurrentProfileResponse$inboundSchema: z.ZodType<
  GetCurrentProfileResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource: z.string().default("profile"),
  id: z.string().optional(),
  mode: GetCurrentProfileMode$inboundSchema.optional(),
  name: z.string().optional(),
  website: z.string().optional(),
  email: z.string().optional(),
  phone: z.string().optional(),
  description: z.string().optional(),
  countriesOfActivity: z.array(z.string()).optional(),
  businessCategory: z.string().optional(),
  status: GetCurrentProfileStatus$inboundSchema.optional(),
  review: z.lazy(() => GetCurrentProfileReview$inboundSchema).optional(),
  createdAt: z.string().optional(),
  _links: z.lazy(() => GetCurrentProfileLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type GetCurrentProfileResponse$Outbound = {
  resource: string;
  id?: string | undefined;
  mode?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  email?: string | undefined;
  phone?: string | undefined;
  description?: string | undefined;
  countriesOfActivity?: Array<string> | undefined;
  businessCategory?: string | undefined;
  status?: string | undefined;
  review?: GetCurrentProfileReview$Outbound | undefined;
  createdAt?: string | undefined;
  _links?: GetCurrentProfileLinks$Outbound | undefined;
};

/** @internal */
export const GetCurrentProfileResponse$outboundSchema: z.ZodType<
  GetCurrentProfileResponse$Outbound,
  z.ZodTypeDef,
  GetCurrentProfileResponse
> = z.object({
  resource: z.string().default("profile"),
  id: z.string().optional(),
  mode: GetCurrentProfileMode$outboundSchema.optional(),
  name: z.string().optional(),
  website: z.string().optional(),
  email: z.string().optional(),
  phone: z.string().optional(),
  description: z.string().optional(),
  countriesOfActivity: z.array(z.string()).optional(),
  businessCategory: z.string().optional(),
  status: GetCurrentProfileStatus$outboundSchema.optional(),
  review: z.lazy(() => GetCurrentProfileReview$outboundSchema).optional(),
  createdAt: z.string().optional(),
  links: z.lazy(() => GetCurrentProfileLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCurrentProfileResponse$ {
  /** @deprecated use `GetCurrentProfileResponse$inboundSchema` instead. */
  export const inboundSchema = GetCurrentProfileResponse$inboundSchema;
  /** @deprecated use `GetCurrentProfileResponse$outboundSchema` instead. */
  export const outboundSchema = GetCurrentProfileResponse$outboundSchema;
  /** @deprecated use `GetCurrentProfileResponse$Outbound` instead. */
  export type Outbound = GetCurrentProfileResponse$Outbound;
}

export function getCurrentProfileResponseToJSON(
  getCurrentProfileResponse: GetCurrentProfileResponse,
): string {
  return JSON.stringify(
    GetCurrentProfileResponse$outboundSchema.parse(getCurrentProfileResponse),
  );
}

export function getCurrentProfileResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetCurrentProfileResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCurrentProfileResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCurrentProfileResponse' from JSON`,
  );
}
