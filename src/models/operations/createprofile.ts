/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateProfileRequest = {
  /**
   * The profile's name, this will usually reflect the trade name or brand name of the profile's website or
   *
   * @remarks
   * application.
   */
  name: string;
  /**
   * The URL to the profile's website or application. Only `https` or `http` URLs are allowed. No `@` signs are
   *
   * @remarks
   * allowed.
   */
  website: string;
  /**
   * The email address associated with the profile's trade name or brand.
   */
  email: string;
  /**
   * The phone number associated with the profile's trade name or brand.
   */
  phone: string;
  /**
   * The products or services offered by the profile's website or application.
   */
  description?: string | undefined;
  /**
   * A list of countries where you expect that the majority of the profile's customers reside,
   *
   * @remarks
   * in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
   */
  countriesOfActivity?: Array<string> | undefined;
  /**
   * The industry associated with the profile's trade name or brand. Please refer to the
   *
   * @remarks
   * [business category list](common-data-types#business-category) for all possible options.
   */
  businessCategory?: string | undefined;
};

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type CreateProfileUnprocessableEntityDocumentation = {
  href: string;
  type: string;
};

export type CreateProfileUnprocessableEntityLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation: CreateProfileUnprocessableEntityDocumentation;
};

/**
 * Whether this entity was created in live mode or in test mode.
 */
export const CreateProfileMode = {
  Live: "live",
  Test: "test",
} as const;
/**
 * Whether this entity was created in live mode or in test mode.
 */
export type CreateProfileMode = ClosedEnum<typeof CreateProfileMode>;

/**
 * The profile status determines whether the profile is able to receive live payments.
 *
 * @remarks
 *
 * * `unverified`: The profile has not been verified yet and can only be used to create test payments.
 * * `verified`: The profile has been verified and can be used to create live payments and test payments.
 * * `blocked`: The profile is blocked and can no longer be used or changed.
 */
export const CreateProfileStatus = {
  Unverified: "unverified",
  Verified: "verified",
  Blocked: "blocked",
} as const;
/**
 * The profile status determines whether the profile is able to receive live payments.
 *
 * @remarks
 *
 * * `unverified`: The profile has not been verified yet and can only be used to create test payments.
 * * `verified`: The profile has been verified and can be used to create live payments and test payments.
 * * `blocked`: The profile is blocked and can no longer be used or changed.
 */
export type CreateProfileStatus = ClosedEnum<typeof CreateProfileStatus>;

/**
 * The status of the requested changes.
 */
export const CreateProfileReviewStatus = {
  Pending: "pending",
  Rejected: "rejected",
} as const;
/**
 * The status of the requested changes.
 */
export type CreateProfileReviewStatus = ClosedEnum<
  typeof CreateProfileReviewStatus
>;

/**
 * Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
 *
 * @remarks
 * automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
 * `null` in test mode.
 */
export type CreateProfileReview = {
  /**
   * The status of the requested changes.
   */
  status?: CreateProfileReviewStatus | undefined;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type CreateProfileSelf = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * Link to the profile in the Mollie dashboard.
 */
export type CreateProfileDashboard = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * The API resource URL of the chargebacks that belong to this profile.
 */
export type CreateProfileChargebacks = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * The API resource URL of the methods that are enabled for this profile.
 */
export type CreateProfileMethods = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * The API resource URL of the payments that belong to this profile.
 */
export type CreateProfilePayments = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * The API resource URL of the refunds that belong to this profile.
 */
export type CreateProfileRefunds = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * The hosted checkout preview URL. You need to be logged in to access this page.
 */
export type CreateProfileCheckoutPreviewUrl = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type CreateProfileDocumentation = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
export type CreateProfileLinks = {
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  self?: CreateProfileSelf | undefined;
  /**
   * Link to the profile in the Mollie dashboard.
   */
  dashboard?: CreateProfileDashboard | undefined;
  /**
   * The API resource URL of the chargebacks that belong to this profile.
   */
  chargebacks?: CreateProfileChargebacks | undefined;
  /**
   * The API resource URL of the methods that are enabled for this profile.
   */
  methods?: CreateProfileMethods | undefined;
  /**
   * The API resource URL of the payments that belong to this profile.
   */
  payments?: CreateProfilePayments | undefined;
  /**
   * The API resource URL of the refunds that belong to this profile.
   */
  refunds?: CreateProfileRefunds | undefined;
  /**
   * The hosted checkout preview URL. You need to be logged in to access this page.
   */
  checkoutPreviewUrl?: CreateProfileCheckoutPreviewUrl | undefined;
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  documentation?: CreateProfileDocumentation | undefined;
};

/**
 * The newly created profile object.
 */
export type CreateProfileResponse = {
  /**
   * Indicates the response contains a profile object. Will always contain the string `profile` for this endpoint.
   */
  resource?: string | undefined;
  /**
   * The identifier uniquely referring to this profile. Example: `pfl_v9hTwCvYqw`.
   */
  id?: string | undefined;
  /**
   * Whether this entity was created in live mode or in test mode.
   */
  mode?: CreateProfileMode | undefined;
  /**
   * The profile's name, this will usually reflect the trade name or brand name of the profile's website or
   *
   * @remarks
   * application.
   */
  name?: string | undefined;
  /**
   * The URL to the profile's website or application. Only `https` or `http` URLs are allowed. No `@` signs are
   *
   * @remarks
   * allowed.
   */
  website?: string | undefined;
  /**
   * The email address associated with the profile's trade name or brand.
   */
  email?: string | undefined;
  /**
   * The phone number associated with the profile's trade name or brand.
   */
  phone?: string | undefined;
  /**
   * The products or services offered by the profile's website or application.
   */
  description?: string | undefined;
  /**
   * A list of countries where you expect that the majority of the profile's customers reside,
   *
   * @remarks
   * in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
   */
  countriesOfActivity?: Array<string> | undefined;
  /**
   * The industry associated with the profile's trade name or brand. Please refer to the
   *
   * @remarks
   * [business category list](common-data-types#business-category) for all possible options.
   */
  businessCategory?: string | undefined;
  /**
   * The profile status determines whether the profile is able to receive live payments.
   *
   * @remarks
   *
   * * `unverified`: The profile has not been verified yet and can only be used to create test payments.
   * * `verified`: The profile has been verified and can be used to create live payments and test payments.
   * * `blocked`: The profile is blocked and can no longer be used or changed.
   */
  status?: CreateProfileStatus | undefined;
  /**
   * Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
   *
   * @remarks
   * automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
   * `null` in test mode.
   */
  review?: CreateProfileReview | undefined;
  /**
   * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  createdAt?: string | undefined;
  /**
   * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
   */
  links?: CreateProfileLinks | undefined;
};

/** @internal */
export const CreateProfileRequest$inboundSchema: z.ZodType<
  CreateProfileRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  website: z.string(),
  email: z.string(),
  phone: z.string(),
  description: z.string().optional(),
  countriesOfActivity: z.array(z.string()).optional(),
  businessCategory: z.string().optional(),
});

/** @internal */
export type CreateProfileRequest$Outbound = {
  name: string;
  website: string;
  email: string;
  phone: string;
  description?: string | undefined;
  countriesOfActivity?: Array<string> | undefined;
  businessCategory?: string | undefined;
};

/** @internal */
export const CreateProfileRequest$outboundSchema: z.ZodType<
  CreateProfileRequest$Outbound,
  z.ZodTypeDef,
  CreateProfileRequest
> = z.object({
  name: z.string(),
  website: z.string(),
  email: z.string(),
  phone: z.string(),
  description: z.string().optional(),
  countriesOfActivity: z.array(z.string()).optional(),
  businessCategory: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileRequest$ {
  /** @deprecated use `CreateProfileRequest$inboundSchema` instead. */
  export const inboundSchema = CreateProfileRequest$inboundSchema;
  /** @deprecated use `CreateProfileRequest$outboundSchema` instead. */
  export const outboundSchema = CreateProfileRequest$outboundSchema;
  /** @deprecated use `CreateProfileRequest$Outbound` instead. */
  export type Outbound = CreateProfileRequest$Outbound;
}

export function createProfileRequestToJSON(
  createProfileRequest: CreateProfileRequest,
): string {
  return JSON.stringify(
    CreateProfileRequest$outboundSchema.parse(createProfileRequest),
  );
}

export function createProfileRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfileRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileRequest' from JSON`,
  );
}

/** @internal */
export const CreateProfileUnprocessableEntityDocumentation$inboundSchema:
  z.ZodType<
    CreateProfileUnprocessableEntityDocumentation,
    z.ZodTypeDef,
    unknown
  > = z.object({
    href: z.string(),
    type: z.string(),
  });

/** @internal */
export type CreateProfileUnprocessableEntityDocumentation$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const CreateProfileUnprocessableEntityDocumentation$outboundSchema:
  z.ZodType<
    CreateProfileUnprocessableEntityDocumentation$Outbound,
    z.ZodTypeDef,
    CreateProfileUnprocessableEntityDocumentation
  > = z.object({
    href: z.string(),
    type: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileUnprocessableEntityDocumentation$ {
  /** @deprecated use `CreateProfileUnprocessableEntityDocumentation$inboundSchema` instead. */
  export const inboundSchema =
    CreateProfileUnprocessableEntityDocumentation$inboundSchema;
  /** @deprecated use `CreateProfileUnprocessableEntityDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    CreateProfileUnprocessableEntityDocumentation$outboundSchema;
  /** @deprecated use `CreateProfileUnprocessableEntityDocumentation$Outbound` instead. */
  export type Outbound = CreateProfileUnprocessableEntityDocumentation$Outbound;
}

export function createProfileUnprocessableEntityDocumentationToJSON(
  createProfileUnprocessableEntityDocumentation:
    CreateProfileUnprocessableEntityDocumentation,
): string {
  return JSON.stringify(
    CreateProfileUnprocessableEntityDocumentation$outboundSchema.parse(
      createProfileUnprocessableEntityDocumentation,
    ),
  );
}

export function createProfileUnprocessableEntityDocumentationFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateProfileUnprocessableEntityDocumentation,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateProfileUnprocessableEntityDocumentation$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateProfileUnprocessableEntityDocumentation' from JSON`,
  );
}

/** @internal */
export const CreateProfileUnprocessableEntityLinks$inboundSchema: z.ZodType<
  CreateProfileUnprocessableEntityLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() =>
    CreateProfileUnprocessableEntityDocumentation$inboundSchema
  ),
});

/** @internal */
export type CreateProfileUnprocessableEntityLinks$Outbound = {
  documentation: CreateProfileUnprocessableEntityDocumentation$Outbound;
};

/** @internal */
export const CreateProfileUnprocessableEntityLinks$outboundSchema: z.ZodType<
  CreateProfileUnprocessableEntityLinks$Outbound,
  z.ZodTypeDef,
  CreateProfileUnprocessableEntityLinks
> = z.object({
  documentation: z.lazy(() =>
    CreateProfileUnprocessableEntityDocumentation$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileUnprocessableEntityLinks$ {
  /** @deprecated use `CreateProfileUnprocessableEntityLinks$inboundSchema` instead. */
  export const inboundSchema =
    CreateProfileUnprocessableEntityLinks$inboundSchema;
  /** @deprecated use `CreateProfileUnprocessableEntityLinks$outboundSchema` instead. */
  export const outboundSchema =
    CreateProfileUnprocessableEntityLinks$outboundSchema;
  /** @deprecated use `CreateProfileUnprocessableEntityLinks$Outbound` instead. */
  export type Outbound = CreateProfileUnprocessableEntityLinks$Outbound;
}

export function createProfileUnprocessableEntityLinksToJSON(
  createProfileUnprocessableEntityLinks: CreateProfileUnprocessableEntityLinks,
): string {
  return JSON.stringify(
    CreateProfileUnprocessableEntityLinks$outboundSchema.parse(
      createProfileUnprocessableEntityLinks,
    ),
  );
}

export function createProfileUnprocessableEntityLinksFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileUnprocessableEntityLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateProfileUnprocessableEntityLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileUnprocessableEntityLinks' from JSON`,
  );
}

/** @internal */
export const CreateProfileMode$inboundSchema: z.ZodNativeEnum<
  typeof CreateProfileMode
> = z.nativeEnum(CreateProfileMode);

/** @internal */
export const CreateProfileMode$outboundSchema: z.ZodNativeEnum<
  typeof CreateProfileMode
> = CreateProfileMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileMode$ {
  /** @deprecated use `CreateProfileMode$inboundSchema` instead. */
  export const inboundSchema = CreateProfileMode$inboundSchema;
  /** @deprecated use `CreateProfileMode$outboundSchema` instead. */
  export const outboundSchema = CreateProfileMode$outboundSchema;
}

/** @internal */
export const CreateProfileStatus$inboundSchema: z.ZodNativeEnum<
  typeof CreateProfileStatus
> = z.nativeEnum(CreateProfileStatus);

/** @internal */
export const CreateProfileStatus$outboundSchema: z.ZodNativeEnum<
  typeof CreateProfileStatus
> = CreateProfileStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileStatus$ {
  /** @deprecated use `CreateProfileStatus$inboundSchema` instead. */
  export const inboundSchema = CreateProfileStatus$inboundSchema;
  /** @deprecated use `CreateProfileStatus$outboundSchema` instead. */
  export const outboundSchema = CreateProfileStatus$outboundSchema;
}

/** @internal */
export const CreateProfileReviewStatus$inboundSchema: z.ZodNativeEnum<
  typeof CreateProfileReviewStatus
> = z.nativeEnum(CreateProfileReviewStatus);

/** @internal */
export const CreateProfileReviewStatus$outboundSchema: z.ZodNativeEnum<
  typeof CreateProfileReviewStatus
> = CreateProfileReviewStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileReviewStatus$ {
  /** @deprecated use `CreateProfileReviewStatus$inboundSchema` instead. */
  export const inboundSchema = CreateProfileReviewStatus$inboundSchema;
  /** @deprecated use `CreateProfileReviewStatus$outboundSchema` instead. */
  export const outboundSchema = CreateProfileReviewStatus$outboundSchema;
}

/** @internal */
export const CreateProfileReview$inboundSchema: z.ZodType<
  CreateProfileReview,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: CreateProfileReviewStatus$inboundSchema.optional(),
});

/** @internal */
export type CreateProfileReview$Outbound = {
  status?: string | undefined;
};

/** @internal */
export const CreateProfileReview$outboundSchema: z.ZodType<
  CreateProfileReview$Outbound,
  z.ZodTypeDef,
  CreateProfileReview
> = z.object({
  status: CreateProfileReviewStatus$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileReview$ {
  /** @deprecated use `CreateProfileReview$inboundSchema` instead. */
  export const inboundSchema = CreateProfileReview$inboundSchema;
  /** @deprecated use `CreateProfileReview$outboundSchema` instead. */
  export const outboundSchema = CreateProfileReview$outboundSchema;
  /** @deprecated use `CreateProfileReview$Outbound` instead. */
  export type Outbound = CreateProfileReview$Outbound;
}

export function createProfileReviewToJSON(
  createProfileReview: CreateProfileReview,
): string {
  return JSON.stringify(
    CreateProfileReview$outboundSchema.parse(createProfileReview),
  );
}

export function createProfileReviewFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileReview, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfileReview$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileReview' from JSON`,
  );
}

/** @internal */
export const CreateProfileSelf$inboundSchema: z.ZodType<
  CreateProfileSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type CreateProfileSelf$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const CreateProfileSelf$outboundSchema: z.ZodType<
  CreateProfileSelf$Outbound,
  z.ZodTypeDef,
  CreateProfileSelf
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileSelf$ {
  /** @deprecated use `CreateProfileSelf$inboundSchema` instead. */
  export const inboundSchema = CreateProfileSelf$inboundSchema;
  /** @deprecated use `CreateProfileSelf$outboundSchema` instead. */
  export const outboundSchema = CreateProfileSelf$outboundSchema;
  /** @deprecated use `CreateProfileSelf$Outbound` instead. */
  export type Outbound = CreateProfileSelf$Outbound;
}

export function createProfileSelfToJSON(
  createProfileSelf: CreateProfileSelf,
): string {
  return JSON.stringify(
    CreateProfileSelf$outboundSchema.parse(createProfileSelf),
  );
}

export function createProfileSelfFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileSelf, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfileSelf$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileSelf' from JSON`,
  );
}

/** @internal */
export const CreateProfileDashboard$inboundSchema: z.ZodType<
  CreateProfileDashboard,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type CreateProfileDashboard$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const CreateProfileDashboard$outboundSchema: z.ZodType<
  CreateProfileDashboard$Outbound,
  z.ZodTypeDef,
  CreateProfileDashboard
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileDashboard$ {
  /** @deprecated use `CreateProfileDashboard$inboundSchema` instead. */
  export const inboundSchema = CreateProfileDashboard$inboundSchema;
  /** @deprecated use `CreateProfileDashboard$outboundSchema` instead. */
  export const outboundSchema = CreateProfileDashboard$outboundSchema;
  /** @deprecated use `CreateProfileDashboard$Outbound` instead. */
  export type Outbound = CreateProfileDashboard$Outbound;
}

export function createProfileDashboardToJSON(
  createProfileDashboard: CreateProfileDashboard,
): string {
  return JSON.stringify(
    CreateProfileDashboard$outboundSchema.parse(createProfileDashboard),
  );
}

export function createProfileDashboardFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileDashboard, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfileDashboard$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileDashboard' from JSON`,
  );
}

/** @internal */
export const CreateProfileChargebacks$inboundSchema: z.ZodType<
  CreateProfileChargebacks,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type CreateProfileChargebacks$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const CreateProfileChargebacks$outboundSchema: z.ZodType<
  CreateProfileChargebacks$Outbound,
  z.ZodTypeDef,
  CreateProfileChargebacks
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileChargebacks$ {
  /** @deprecated use `CreateProfileChargebacks$inboundSchema` instead. */
  export const inboundSchema = CreateProfileChargebacks$inboundSchema;
  /** @deprecated use `CreateProfileChargebacks$outboundSchema` instead. */
  export const outboundSchema = CreateProfileChargebacks$outboundSchema;
  /** @deprecated use `CreateProfileChargebacks$Outbound` instead. */
  export type Outbound = CreateProfileChargebacks$Outbound;
}

export function createProfileChargebacksToJSON(
  createProfileChargebacks: CreateProfileChargebacks,
): string {
  return JSON.stringify(
    CreateProfileChargebacks$outboundSchema.parse(createProfileChargebacks),
  );
}

export function createProfileChargebacksFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileChargebacks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfileChargebacks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileChargebacks' from JSON`,
  );
}

/** @internal */
export const CreateProfileMethods$inboundSchema: z.ZodType<
  CreateProfileMethods,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type CreateProfileMethods$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const CreateProfileMethods$outboundSchema: z.ZodType<
  CreateProfileMethods$Outbound,
  z.ZodTypeDef,
  CreateProfileMethods
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileMethods$ {
  /** @deprecated use `CreateProfileMethods$inboundSchema` instead. */
  export const inboundSchema = CreateProfileMethods$inboundSchema;
  /** @deprecated use `CreateProfileMethods$outboundSchema` instead. */
  export const outboundSchema = CreateProfileMethods$outboundSchema;
  /** @deprecated use `CreateProfileMethods$Outbound` instead. */
  export type Outbound = CreateProfileMethods$Outbound;
}

export function createProfileMethodsToJSON(
  createProfileMethods: CreateProfileMethods,
): string {
  return JSON.stringify(
    CreateProfileMethods$outboundSchema.parse(createProfileMethods),
  );
}

export function createProfileMethodsFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileMethods, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfileMethods$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileMethods' from JSON`,
  );
}

/** @internal */
export const CreateProfilePayments$inboundSchema: z.ZodType<
  CreateProfilePayments,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type CreateProfilePayments$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const CreateProfilePayments$outboundSchema: z.ZodType<
  CreateProfilePayments$Outbound,
  z.ZodTypeDef,
  CreateProfilePayments
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfilePayments$ {
  /** @deprecated use `CreateProfilePayments$inboundSchema` instead. */
  export const inboundSchema = CreateProfilePayments$inboundSchema;
  /** @deprecated use `CreateProfilePayments$outboundSchema` instead. */
  export const outboundSchema = CreateProfilePayments$outboundSchema;
  /** @deprecated use `CreateProfilePayments$Outbound` instead. */
  export type Outbound = CreateProfilePayments$Outbound;
}

export function createProfilePaymentsToJSON(
  createProfilePayments: CreateProfilePayments,
): string {
  return JSON.stringify(
    CreateProfilePayments$outboundSchema.parse(createProfilePayments),
  );
}

export function createProfilePaymentsFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfilePayments, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfilePayments$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfilePayments' from JSON`,
  );
}

/** @internal */
export const CreateProfileRefunds$inboundSchema: z.ZodType<
  CreateProfileRefunds,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type CreateProfileRefunds$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const CreateProfileRefunds$outboundSchema: z.ZodType<
  CreateProfileRefunds$Outbound,
  z.ZodTypeDef,
  CreateProfileRefunds
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileRefunds$ {
  /** @deprecated use `CreateProfileRefunds$inboundSchema` instead. */
  export const inboundSchema = CreateProfileRefunds$inboundSchema;
  /** @deprecated use `CreateProfileRefunds$outboundSchema` instead. */
  export const outboundSchema = CreateProfileRefunds$outboundSchema;
  /** @deprecated use `CreateProfileRefunds$Outbound` instead. */
  export type Outbound = CreateProfileRefunds$Outbound;
}

export function createProfileRefundsToJSON(
  createProfileRefunds: CreateProfileRefunds,
): string {
  return JSON.stringify(
    CreateProfileRefunds$outboundSchema.parse(createProfileRefunds),
  );
}

export function createProfileRefundsFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileRefunds, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfileRefunds$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileRefunds' from JSON`,
  );
}

/** @internal */
export const CreateProfileCheckoutPreviewUrl$inboundSchema: z.ZodType<
  CreateProfileCheckoutPreviewUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type CreateProfileCheckoutPreviewUrl$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const CreateProfileCheckoutPreviewUrl$outboundSchema: z.ZodType<
  CreateProfileCheckoutPreviewUrl$Outbound,
  z.ZodTypeDef,
  CreateProfileCheckoutPreviewUrl
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileCheckoutPreviewUrl$ {
  /** @deprecated use `CreateProfileCheckoutPreviewUrl$inboundSchema` instead. */
  export const inboundSchema = CreateProfileCheckoutPreviewUrl$inboundSchema;
  /** @deprecated use `CreateProfileCheckoutPreviewUrl$outboundSchema` instead. */
  export const outboundSchema = CreateProfileCheckoutPreviewUrl$outboundSchema;
  /** @deprecated use `CreateProfileCheckoutPreviewUrl$Outbound` instead. */
  export type Outbound = CreateProfileCheckoutPreviewUrl$Outbound;
}

export function createProfileCheckoutPreviewUrlToJSON(
  createProfileCheckoutPreviewUrl: CreateProfileCheckoutPreviewUrl,
): string {
  return JSON.stringify(
    CreateProfileCheckoutPreviewUrl$outboundSchema.parse(
      createProfileCheckoutPreviewUrl,
    ),
  );
}

export function createProfileCheckoutPreviewUrlFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileCheckoutPreviewUrl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfileCheckoutPreviewUrl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileCheckoutPreviewUrl' from JSON`,
  );
}

/** @internal */
export const CreateProfileDocumentation$inboundSchema: z.ZodType<
  CreateProfileDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type CreateProfileDocumentation$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const CreateProfileDocumentation$outboundSchema: z.ZodType<
  CreateProfileDocumentation$Outbound,
  z.ZodTypeDef,
  CreateProfileDocumentation
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileDocumentation$ {
  /** @deprecated use `CreateProfileDocumentation$inboundSchema` instead. */
  export const inboundSchema = CreateProfileDocumentation$inboundSchema;
  /** @deprecated use `CreateProfileDocumentation$outboundSchema` instead. */
  export const outboundSchema = CreateProfileDocumentation$outboundSchema;
  /** @deprecated use `CreateProfileDocumentation$Outbound` instead. */
  export type Outbound = CreateProfileDocumentation$Outbound;
}

export function createProfileDocumentationToJSON(
  createProfileDocumentation: CreateProfileDocumentation,
): string {
  return JSON.stringify(
    CreateProfileDocumentation$outboundSchema.parse(createProfileDocumentation),
  );
}

export function createProfileDocumentationFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileDocumentation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfileDocumentation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileDocumentation' from JSON`,
  );
}

/** @internal */
export const CreateProfileLinks$inboundSchema: z.ZodType<
  CreateProfileLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => CreateProfileSelf$inboundSchema).optional(),
  dashboard: z.lazy(() => CreateProfileDashboard$inboundSchema).optional(),
  chargebacks: z.lazy(() => CreateProfileChargebacks$inboundSchema).optional(),
  methods: z.lazy(() => CreateProfileMethods$inboundSchema).optional(),
  payments: z.lazy(() => CreateProfilePayments$inboundSchema).optional(),
  refunds: z.lazy(() => CreateProfileRefunds$inboundSchema).optional(),
  checkoutPreviewUrl: z.lazy(() =>
    CreateProfileCheckoutPreviewUrl$inboundSchema
  ).optional(),
  documentation: z.lazy(() => CreateProfileDocumentation$inboundSchema)
    .optional(),
});

/** @internal */
export type CreateProfileLinks$Outbound = {
  self?: CreateProfileSelf$Outbound | undefined;
  dashboard?: CreateProfileDashboard$Outbound | undefined;
  chargebacks?: CreateProfileChargebacks$Outbound | undefined;
  methods?: CreateProfileMethods$Outbound | undefined;
  payments?: CreateProfilePayments$Outbound | undefined;
  refunds?: CreateProfileRefunds$Outbound | undefined;
  checkoutPreviewUrl?: CreateProfileCheckoutPreviewUrl$Outbound | undefined;
  documentation?: CreateProfileDocumentation$Outbound | undefined;
};

/** @internal */
export const CreateProfileLinks$outboundSchema: z.ZodType<
  CreateProfileLinks$Outbound,
  z.ZodTypeDef,
  CreateProfileLinks
> = z.object({
  self: z.lazy(() => CreateProfileSelf$outboundSchema).optional(),
  dashboard: z.lazy(() => CreateProfileDashboard$outboundSchema).optional(),
  chargebacks: z.lazy(() => CreateProfileChargebacks$outboundSchema).optional(),
  methods: z.lazy(() => CreateProfileMethods$outboundSchema).optional(),
  payments: z.lazy(() => CreateProfilePayments$outboundSchema).optional(),
  refunds: z.lazy(() => CreateProfileRefunds$outboundSchema).optional(),
  checkoutPreviewUrl: z.lazy(() =>
    CreateProfileCheckoutPreviewUrl$outboundSchema
  ).optional(),
  documentation: z.lazy(() => CreateProfileDocumentation$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileLinks$ {
  /** @deprecated use `CreateProfileLinks$inboundSchema` instead. */
  export const inboundSchema = CreateProfileLinks$inboundSchema;
  /** @deprecated use `CreateProfileLinks$outboundSchema` instead. */
  export const outboundSchema = CreateProfileLinks$outboundSchema;
  /** @deprecated use `CreateProfileLinks$Outbound` instead. */
  export type Outbound = CreateProfileLinks$Outbound;
}

export function createProfileLinksToJSON(
  createProfileLinks: CreateProfileLinks,
): string {
  return JSON.stringify(
    CreateProfileLinks$outboundSchema.parse(createProfileLinks),
  );
}

export function createProfileLinksFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfileLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileLinks' from JSON`,
  );
}

/** @internal */
export const CreateProfileResponse$inboundSchema: z.ZodType<
  CreateProfileResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource: z.string().optional(),
  id: z.string().optional(),
  mode: CreateProfileMode$inboundSchema.optional(),
  name: z.string().optional(),
  website: z.string().optional(),
  email: z.string().optional(),
  phone: z.string().optional(),
  description: z.string().optional(),
  countriesOfActivity: z.array(z.string()).optional(),
  businessCategory: z.string().optional(),
  status: CreateProfileStatus$inboundSchema.optional(),
  review: z.lazy(() => CreateProfileReview$inboundSchema).optional(),
  createdAt: z.string().optional(),
  _links: z.lazy(() => CreateProfileLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type CreateProfileResponse$Outbound = {
  resource?: string | undefined;
  id?: string | undefined;
  mode?: string | undefined;
  name?: string | undefined;
  website?: string | undefined;
  email?: string | undefined;
  phone?: string | undefined;
  description?: string | undefined;
  countriesOfActivity?: Array<string> | undefined;
  businessCategory?: string | undefined;
  status?: string | undefined;
  review?: CreateProfileReview$Outbound | undefined;
  createdAt?: string | undefined;
  _links?: CreateProfileLinks$Outbound | undefined;
};

/** @internal */
export const CreateProfileResponse$outboundSchema: z.ZodType<
  CreateProfileResponse$Outbound,
  z.ZodTypeDef,
  CreateProfileResponse
> = z.object({
  resource: z.string().optional(),
  id: z.string().optional(),
  mode: CreateProfileMode$outboundSchema.optional(),
  name: z.string().optional(),
  website: z.string().optional(),
  email: z.string().optional(),
  phone: z.string().optional(),
  description: z.string().optional(),
  countriesOfActivity: z.array(z.string()).optional(),
  businessCategory: z.string().optional(),
  status: CreateProfileStatus$outboundSchema.optional(),
  review: z.lazy(() => CreateProfileReview$outboundSchema).optional(),
  createdAt: z.string().optional(),
  links: z.lazy(() => CreateProfileLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProfileResponse$ {
  /** @deprecated use `CreateProfileResponse$inboundSchema` instead. */
  export const inboundSchema = CreateProfileResponse$inboundSchema;
  /** @deprecated use `CreateProfileResponse$outboundSchema` instead. */
  export const outboundSchema = CreateProfileResponse$outboundSchema;
  /** @deprecated use `CreateProfileResponse$Outbound` instead. */
  export type Outbound = CreateProfileResponse$Outbound;
}

export function createProfileResponseToJSON(
  createProfileResponse: CreateProfileResponse,
): string {
  return JSON.stringify(
    CreateProfileResponse$outboundSchema.parse(createProfileResponse),
  );
}

export function createProfileResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateProfileResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateProfileResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProfileResponse' from JSON`,
  );
}
