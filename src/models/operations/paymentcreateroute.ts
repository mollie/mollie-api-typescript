/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The amount of the route.
 *
 * @remarks
 * That amount that will be routed to the specified destination.
 */
export type PaymentCreateRouteAmountRequest = {
  /**
   * A three-character ISO 4217 currency code.
   */
  currency: string;
  /**
   * A string containing an exact monetary amount in the given currency.
   */
  value: string;
};

/**
 * The type of destination. Currently only the destination type `organization` is supported.
 */
export const PaymentCreateRouteTypeRequest = {
  Organization: "organization",
} as const;
/**
 * The type of destination. Currently only the destination type `organization` is supported.
 */
export type PaymentCreateRouteTypeRequest = ClosedEnum<
  typeof PaymentCreateRouteTypeRequest
>;

/**
 * The destination of the route.
 */
export type PaymentCreateRouteDestinationRequest = {
  /**
   * The type of destination. Currently only the destination type `organization` is supported.
   */
  type: PaymentCreateRouteTypeRequest;
  /**
   * Required for destination type `organization`. The ID of the connected organization the funds should be
   *
   * @remarks
   * routed to.
   */
  organizationId: string;
};

export type PaymentCreateRouteRequestBody = {
  /**
   * The amount of the route.
   *
   * @remarks
   * That amount that will be routed to the specified destination.
   */
  amount?: PaymentCreateRouteAmountRequest | undefined;
  /**
   * The description of the route. This description is shown in the reports.
   */
  description?: string | undefined;
  /**
   * The destination of the route.
   */
  destination?: PaymentCreateRouteDestinationRequest | undefined;
};

export type PaymentCreateRouteRequest = {
  /**
   * Provide the ID of the related payment.
   */
  paymentId: string;
  requestBody?: PaymentCreateRouteRequestBody | undefined;
};

/**
 * The URL to the generic Mollie API error handling guide.
 */
export type PaymentCreateRouteNotFoundDocumentation = {
  href: string;
  type: string;
};

export type PaymentCreateRouteNotFoundLinks = {
  /**
   * The URL to the generic Mollie API error handling guide.
   */
  documentation: PaymentCreateRouteNotFoundDocumentation;
};

/**
 * The amount of the route.
 *
 * @remarks
 * That amount that will be routed to the specified destination.
 */
export type PaymentCreateRouteAmountResponse = {
  /**
   * A three-character ISO 4217 currency code.
   */
  currency: string;
  /**
   * A string containing an exact monetary amount in the given currency.
   */
  value: string;
};

/**
 * The type of destination. Currently only the destination type `organization` is supported.
 */
export const PaymentCreateRouteTypeResponse = {
  Organization: "organization",
} as const;
/**
 * The type of destination. Currently only the destination type `organization` is supported.
 */
export type PaymentCreateRouteTypeResponse = ClosedEnum<
  typeof PaymentCreateRouteTypeResponse
>;

/**
 * The destination of the route.
 */
export type PaymentCreateRouteDestinationResponse = {
  /**
   * The type of destination. Currently only the destination type `organization` is supported.
   */
  type: PaymentCreateRouteTypeResponse;
  /**
   * Required for destination type `organization`. The ID of the connected organization the funds should be
   *
   * @remarks
   * routed to.
   */
  organizationId: string;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type PaymentCreateRouteSelf = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
 */
export type PaymentCreateRouteDocumentation = {
  /**
   * The actual URL string.
   */
  href: string;
  /**
   * The content type of the page or endpoint the URL points to.
   */
  type: string;
};

/**
 * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
export type PaymentCreateRouteLinks = {
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  self: PaymentCreateRouteSelf;
  /**
   * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
   */
  documentation: PaymentCreateRouteDocumentation;
};

/**
 * The route object.
 */
export type PaymentCreateRouteResponse = {
  /**
   * Indicates the response contains a route object. Will always contain the string `route` for this endpoint.
   */
  resource?: string | undefined;
  /**
   * The identifier uniquely referring to this route. Mollie assigns this identifier at route creation time. Mollie
   *
   * @remarks
   * will always refer to the route by this ID. Example: `crt_dyARQ3JzCgtPDhU2Pbq3J`.
   */
  id: string;
  /**
   * The unique identifier of the payment. For example: `tr_5B8cwPMGnU6qLbRvo7qEZo`.
   *
   * @remarks
   * The full payment object can be retrieved via the payment URL in the `_links` object.
   */
  paymentId: string;
  /**
   * The amount of the route.
   *
   * @remarks
   * That amount that will be routed to the specified destination.
   */
  amount: PaymentCreateRouteAmountResponse;
  /**
   * The description of the route. This description is shown in the reports.
   */
  description: string;
  /**
   * The destination of the route.
   */
  destination: PaymentCreateRouteDestinationResponse;
  /**
   * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
   */
  links: PaymentCreateRouteLinks;
};

/** @internal */
export const PaymentCreateRouteAmountRequest$inboundSchema: z.ZodType<
  PaymentCreateRouteAmountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/** @internal */
export type PaymentCreateRouteAmountRequest$Outbound = {
  currency: string;
  value: string;
};

/** @internal */
export const PaymentCreateRouteAmountRequest$outboundSchema: z.ZodType<
  PaymentCreateRouteAmountRequest$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteAmountRequest
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteAmountRequest$ {
  /** @deprecated use `PaymentCreateRouteAmountRequest$inboundSchema` instead. */
  export const inboundSchema = PaymentCreateRouteAmountRequest$inboundSchema;
  /** @deprecated use `PaymentCreateRouteAmountRequest$outboundSchema` instead. */
  export const outboundSchema = PaymentCreateRouteAmountRequest$outboundSchema;
  /** @deprecated use `PaymentCreateRouteAmountRequest$Outbound` instead. */
  export type Outbound = PaymentCreateRouteAmountRequest$Outbound;
}

export function paymentCreateRouteAmountRequestToJSON(
  paymentCreateRouteAmountRequest: PaymentCreateRouteAmountRequest,
): string {
  return JSON.stringify(
    PaymentCreateRouteAmountRequest$outboundSchema.parse(
      paymentCreateRouteAmountRequest,
    ),
  );
}

export function paymentCreateRouteAmountRequestFromJSON(
  jsonString: string,
): SafeParseResult<PaymentCreateRouteAmountRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentCreateRouteAmountRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentCreateRouteAmountRequest' from JSON`,
  );
}

/** @internal */
export const PaymentCreateRouteTypeRequest$inboundSchema: z.ZodNativeEnum<
  typeof PaymentCreateRouteTypeRequest
> = z.nativeEnum(PaymentCreateRouteTypeRequest);

/** @internal */
export const PaymentCreateRouteTypeRequest$outboundSchema: z.ZodNativeEnum<
  typeof PaymentCreateRouteTypeRequest
> = PaymentCreateRouteTypeRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteTypeRequest$ {
  /** @deprecated use `PaymentCreateRouteTypeRequest$inboundSchema` instead. */
  export const inboundSchema = PaymentCreateRouteTypeRequest$inboundSchema;
  /** @deprecated use `PaymentCreateRouteTypeRequest$outboundSchema` instead. */
  export const outboundSchema = PaymentCreateRouteTypeRequest$outboundSchema;
}

/** @internal */
export const PaymentCreateRouteDestinationRequest$inboundSchema: z.ZodType<
  PaymentCreateRouteDestinationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PaymentCreateRouteTypeRequest$inboundSchema,
  organizationId: z.string(),
});

/** @internal */
export type PaymentCreateRouteDestinationRequest$Outbound = {
  type: string;
  organizationId: string;
};

/** @internal */
export const PaymentCreateRouteDestinationRequest$outboundSchema: z.ZodType<
  PaymentCreateRouteDestinationRequest$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteDestinationRequest
> = z.object({
  type: PaymentCreateRouteTypeRequest$outboundSchema,
  organizationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteDestinationRequest$ {
  /** @deprecated use `PaymentCreateRouteDestinationRequest$inboundSchema` instead. */
  export const inboundSchema =
    PaymentCreateRouteDestinationRequest$inboundSchema;
  /** @deprecated use `PaymentCreateRouteDestinationRequest$outboundSchema` instead. */
  export const outboundSchema =
    PaymentCreateRouteDestinationRequest$outboundSchema;
  /** @deprecated use `PaymentCreateRouteDestinationRequest$Outbound` instead. */
  export type Outbound = PaymentCreateRouteDestinationRequest$Outbound;
}

export function paymentCreateRouteDestinationRequestToJSON(
  paymentCreateRouteDestinationRequest: PaymentCreateRouteDestinationRequest,
): string {
  return JSON.stringify(
    PaymentCreateRouteDestinationRequest$outboundSchema.parse(
      paymentCreateRouteDestinationRequest,
    ),
  );
}

export function paymentCreateRouteDestinationRequestFromJSON(
  jsonString: string,
): SafeParseResult<PaymentCreateRouteDestinationRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PaymentCreateRouteDestinationRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentCreateRouteDestinationRequest' from JSON`,
  );
}

/** @internal */
export const PaymentCreateRouteRequestBody$inboundSchema: z.ZodType<
  PaymentCreateRouteRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.lazy(() => PaymentCreateRouteAmountRequest$inboundSchema)
    .optional(),
  description: z.string().optional(),
  destination: z.lazy(() => PaymentCreateRouteDestinationRequest$inboundSchema)
    .optional(),
});

/** @internal */
export type PaymentCreateRouteRequestBody$Outbound = {
  amount?: PaymentCreateRouteAmountRequest$Outbound | undefined;
  description?: string | undefined;
  destination?: PaymentCreateRouteDestinationRequest$Outbound | undefined;
};

/** @internal */
export const PaymentCreateRouteRequestBody$outboundSchema: z.ZodType<
  PaymentCreateRouteRequestBody$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteRequestBody
> = z.object({
  amount: z.lazy(() => PaymentCreateRouteAmountRequest$outboundSchema)
    .optional(),
  description: z.string().optional(),
  destination: z.lazy(() => PaymentCreateRouteDestinationRequest$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteRequestBody$ {
  /** @deprecated use `PaymentCreateRouteRequestBody$inboundSchema` instead. */
  export const inboundSchema = PaymentCreateRouteRequestBody$inboundSchema;
  /** @deprecated use `PaymentCreateRouteRequestBody$outboundSchema` instead. */
  export const outboundSchema = PaymentCreateRouteRequestBody$outboundSchema;
  /** @deprecated use `PaymentCreateRouteRequestBody$Outbound` instead. */
  export type Outbound = PaymentCreateRouteRequestBody$Outbound;
}

export function paymentCreateRouteRequestBodyToJSON(
  paymentCreateRouteRequestBody: PaymentCreateRouteRequestBody,
): string {
  return JSON.stringify(
    PaymentCreateRouteRequestBody$outboundSchema.parse(
      paymentCreateRouteRequestBody,
    ),
  );
}

export function paymentCreateRouteRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PaymentCreateRouteRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentCreateRouteRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentCreateRouteRequestBody' from JSON`,
  );
}

/** @internal */
export const PaymentCreateRouteRequest$inboundSchema: z.ZodType<
  PaymentCreateRouteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  paymentId: z.string(),
  RequestBody: z.lazy(() => PaymentCreateRouteRequestBody$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type PaymentCreateRouteRequest$Outbound = {
  paymentId: string;
  RequestBody?: PaymentCreateRouteRequestBody$Outbound | undefined;
};

/** @internal */
export const PaymentCreateRouteRequest$outboundSchema: z.ZodType<
  PaymentCreateRouteRequest$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteRequest
> = z.object({
  paymentId: z.string(),
  requestBody: z.lazy(() => PaymentCreateRouteRequestBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteRequest$ {
  /** @deprecated use `PaymentCreateRouteRequest$inboundSchema` instead. */
  export const inboundSchema = PaymentCreateRouteRequest$inboundSchema;
  /** @deprecated use `PaymentCreateRouteRequest$outboundSchema` instead. */
  export const outboundSchema = PaymentCreateRouteRequest$outboundSchema;
  /** @deprecated use `PaymentCreateRouteRequest$Outbound` instead. */
  export type Outbound = PaymentCreateRouteRequest$Outbound;
}

export function paymentCreateRouteRequestToJSON(
  paymentCreateRouteRequest: PaymentCreateRouteRequest,
): string {
  return JSON.stringify(
    PaymentCreateRouteRequest$outboundSchema.parse(paymentCreateRouteRequest),
  );
}

export function paymentCreateRouteRequestFromJSON(
  jsonString: string,
): SafeParseResult<PaymentCreateRouteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentCreateRouteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentCreateRouteRequest' from JSON`,
  );
}

/** @internal */
export const PaymentCreateRouteNotFoundDocumentation$inboundSchema: z.ZodType<
  PaymentCreateRouteNotFoundDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type PaymentCreateRouteNotFoundDocumentation$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const PaymentCreateRouteNotFoundDocumentation$outboundSchema: z.ZodType<
  PaymentCreateRouteNotFoundDocumentation$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteNotFoundDocumentation
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteNotFoundDocumentation$ {
  /** @deprecated use `PaymentCreateRouteNotFoundDocumentation$inboundSchema` instead. */
  export const inboundSchema =
    PaymentCreateRouteNotFoundDocumentation$inboundSchema;
  /** @deprecated use `PaymentCreateRouteNotFoundDocumentation$outboundSchema` instead. */
  export const outboundSchema =
    PaymentCreateRouteNotFoundDocumentation$outboundSchema;
  /** @deprecated use `PaymentCreateRouteNotFoundDocumentation$Outbound` instead. */
  export type Outbound = PaymentCreateRouteNotFoundDocumentation$Outbound;
}

export function paymentCreateRouteNotFoundDocumentationToJSON(
  paymentCreateRouteNotFoundDocumentation:
    PaymentCreateRouteNotFoundDocumentation,
): string {
  return JSON.stringify(
    PaymentCreateRouteNotFoundDocumentation$outboundSchema.parse(
      paymentCreateRouteNotFoundDocumentation,
    ),
  );
}

export function paymentCreateRouteNotFoundDocumentationFromJSON(
  jsonString: string,
): SafeParseResult<
  PaymentCreateRouteNotFoundDocumentation,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PaymentCreateRouteNotFoundDocumentation$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PaymentCreateRouteNotFoundDocumentation' from JSON`,
  );
}

/** @internal */
export const PaymentCreateRouteNotFoundLinks$inboundSchema: z.ZodType<
  PaymentCreateRouteNotFoundLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentation: z.lazy(() =>
    PaymentCreateRouteNotFoundDocumentation$inboundSchema
  ),
});

/** @internal */
export type PaymentCreateRouteNotFoundLinks$Outbound = {
  documentation: PaymentCreateRouteNotFoundDocumentation$Outbound;
};

/** @internal */
export const PaymentCreateRouteNotFoundLinks$outboundSchema: z.ZodType<
  PaymentCreateRouteNotFoundLinks$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteNotFoundLinks
> = z.object({
  documentation: z.lazy(() =>
    PaymentCreateRouteNotFoundDocumentation$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteNotFoundLinks$ {
  /** @deprecated use `PaymentCreateRouteNotFoundLinks$inboundSchema` instead. */
  export const inboundSchema = PaymentCreateRouteNotFoundLinks$inboundSchema;
  /** @deprecated use `PaymentCreateRouteNotFoundLinks$outboundSchema` instead. */
  export const outboundSchema = PaymentCreateRouteNotFoundLinks$outboundSchema;
  /** @deprecated use `PaymentCreateRouteNotFoundLinks$Outbound` instead. */
  export type Outbound = PaymentCreateRouteNotFoundLinks$Outbound;
}

export function paymentCreateRouteNotFoundLinksToJSON(
  paymentCreateRouteNotFoundLinks: PaymentCreateRouteNotFoundLinks,
): string {
  return JSON.stringify(
    PaymentCreateRouteNotFoundLinks$outboundSchema.parse(
      paymentCreateRouteNotFoundLinks,
    ),
  );
}

export function paymentCreateRouteNotFoundLinksFromJSON(
  jsonString: string,
): SafeParseResult<PaymentCreateRouteNotFoundLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentCreateRouteNotFoundLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentCreateRouteNotFoundLinks' from JSON`,
  );
}

/** @internal */
export const PaymentCreateRouteAmountResponse$inboundSchema: z.ZodType<
  PaymentCreateRouteAmountResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/** @internal */
export type PaymentCreateRouteAmountResponse$Outbound = {
  currency: string;
  value: string;
};

/** @internal */
export const PaymentCreateRouteAmountResponse$outboundSchema: z.ZodType<
  PaymentCreateRouteAmountResponse$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteAmountResponse
> = z.object({
  currency: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteAmountResponse$ {
  /** @deprecated use `PaymentCreateRouteAmountResponse$inboundSchema` instead. */
  export const inboundSchema = PaymentCreateRouteAmountResponse$inboundSchema;
  /** @deprecated use `PaymentCreateRouteAmountResponse$outboundSchema` instead. */
  export const outboundSchema = PaymentCreateRouteAmountResponse$outboundSchema;
  /** @deprecated use `PaymentCreateRouteAmountResponse$Outbound` instead. */
  export type Outbound = PaymentCreateRouteAmountResponse$Outbound;
}

export function paymentCreateRouteAmountResponseToJSON(
  paymentCreateRouteAmountResponse: PaymentCreateRouteAmountResponse,
): string {
  return JSON.stringify(
    PaymentCreateRouteAmountResponse$outboundSchema.parse(
      paymentCreateRouteAmountResponse,
    ),
  );
}

export function paymentCreateRouteAmountResponseFromJSON(
  jsonString: string,
): SafeParseResult<PaymentCreateRouteAmountResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentCreateRouteAmountResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentCreateRouteAmountResponse' from JSON`,
  );
}

/** @internal */
export const PaymentCreateRouteTypeResponse$inboundSchema: z.ZodNativeEnum<
  typeof PaymentCreateRouteTypeResponse
> = z.nativeEnum(PaymentCreateRouteTypeResponse);

/** @internal */
export const PaymentCreateRouteTypeResponse$outboundSchema: z.ZodNativeEnum<
  typeof PaymentCreateRouteTypeResponse
> = PaymentCreateRouteTypeResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteTypeResponse$ {
  /** @deprecated use `PaymentCreateRouteTypeResponse$inboundSchema` instead. */
  export const inboundSchema = PaymentCreateRouteTypeResponse$inboundSchema;
  /** @deprecated use `PaymentCreateRouteTypeResponse$outboundSchema` instead. */
  export const outboundSchema = PaymentCreateRouteTypeResponse$outboundSchema;
}

/** @internal */
export const PaymentCreateRouteDestinationResponse$inboundSchema: z.ZodType<
  PaymentCreateRouteDestinationResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PaymentCreateRouteTypeResponse$inboundSchema,
  organizationId: z.string(),
});

/** @internal */
export type PaymentCreateRouteDestinationResponse$Outbound = {
  type: string;
  organizationId: string;
};

/** @internal */
export const PaymentCreateRouteDestinationResponse$outboundSchema: z.ZodType<
  PaymentCreateRouteDestinationResponse$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteDestinationResponse
> = z.object({
  type: PaymentCreateRouteTypeResponse$outboundSchema,
  organizationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteDestinationResponse$ {
  /** @deprecated use `PaymentCreateRouteDestinationResponse$inboundSchema` instead. */
  export const inboundSchema =
    PaymentCreateRouteDestinationResponse$inboundSchema;
  /** @deprecated use `PaymentCreateRouteDestinationResponse$outboundSchema` instead. */
  export const outboundSchema =
    PaymentCreateRouteDestinationResponse$outboundSchema;
  /** @deprecated use `PaymentCreateRouteDestinationResponse$Outbound` instead. */
  export type Outbound = PaymentCreateRouteDestinationResponse$Outbound;
}

export function paymentCreateRouteDestinationResponseToJSON(
  paymentCreateRouteDestinationResponse: PaymentCreateRouteDestinationResponse,
): string {
  return JSON.stringify(
    PaymentCreateRouteDestinationResponse$outboundSchema.parse(
      paymentCreateRouteDestinationResponse,
    ),
  );
}

export function paymentCreateRouteDestinationResponseFromJSON(
  jsonString: string,
): SafeParseResult<PaymentCreateRouteDestinationResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PaymentCreateRouteDestinationResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentCreateRouteDestinationResponse' from JSON`,
  );
}

/** @internal */
export const PaymentCreateRouteSelf$inboundSchema: z.ZodType<
  PaymentCreateRouteSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type PaymentCreateRouteSelf$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const PaymentCreateRouteSelf$outboundSchema: z.ZodType<
  PaymentCreateRouteSelf$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteSelf
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteSelf$ {
  /** @deprecated use `PaymentCreateRouteSelf$inboundSchema` instead. */
  export const inboundSchema = PaymentCreateRouteSelf$inboundSchema;
  /** @deprecated use `PaymentCreateRouteSelf$outboundSchema` instead. */
  export const outboundSchema = PaymentCreateRouteSelf$outboundSchema;
  /** @deprecated use `PaymentCreateRouteSelf$Outbound` instead. */
  export type Outbound = PaymentCreateRouteSelf$Outbound;
}

export function paymentCreateRouteSelfToJSON(
  paymentCreateRouteSelf: PaymentCreateRouteSelf,
): string {
  return JSON.stringify(
    PaymentCreateRouteSelf$outboundSchema.parse(paymentCreateRouteSelf),
  );
}

export function paymentCreateRouteSelfFromJSON(
  jsonString: string,
): SafeParseResult<PaymentCreateRouteSelf, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentCreateRouteSelf$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentCreateRouteSelf' from JSON`,
  );
}

/** @internal */
export const PaymentCreateRouteDocumentation$inboundSchema: z.ZodType<
  PaymentCreateRouteDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  type: z.string(),
});

/** @internal */
export type PaymentCreateRouteDocumentation$Outbound = {
  href: string;
  type: string;
};

/** @internal */
export const PaymentCreateRouteDocumentation$outboundSchema: z.ZodType<
  PaymentCreateRouteDocumentation$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteDocumentation
> = z.object({
  href: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteDocumentation$ {
  /** @deprecated use `PaymentCreateRouteDocumentation$inboundSchema` instead. */
  export const inboundSchema = PaymentCreateRouteDocumentation$inboundSchema;
  /** @deprecated use `PaymentCreateRouteDocumentation$outboundSchema` instead. */
  export const outboundSchema = PaymentCreateRouteDocumentation$outboundSchema;
  /** @deprecated use `PaymentCreateRouteDocumentation$Outbound` instead. */
  export type Outbound = PaymentCreateRouteDocumentation$Outbound;
}

export function paymentCreateRouteDocumentationToJSON(
  paymentCreateRouteDocumentation: PaymentCreateRouteDocumentation,
): string {
  return JSON.stringify(
    PaymentCreateRouteDocumentation$outboundSchema.parse(
      paymentCreateRouteDocumentation,
    ),
  );
}

export function paymentCreateRouteDocumentationFromJSON(
  jsonString: string,
): SafeParseResult<PaymentCreateRouteDocumentation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentCreateRouteDocumentation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentCreateRouteDocumentation' from JSON`,
  );
}

/** @internal */
export const PaymentCreateRouteLinks$inboundSchema: z.ZodType<
  PaymentCreateRouteLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => PaymentCreateRouteSelf$inboundSchema),
  documentation: z.lazy(() => PaymentCreateRouteDocumentation$inboundSchema),
});

/** @internal */
export type PaymentCreateRouteLinks$Outbound = {
  self: PaymentCreateRouteSelf$Outbound;
  documentation: PaymentCreateRouteDocumentation$Outbound;
};

/** @internal */
export const PaymentCreateRouteLinks$outboundSchema: z.ZodType<
  PaymentCreateRouteLinks$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteLinks
> = z.object({
  self: z.lazy(() => PaymentCreateRouteSelf$outboundSchema),
  documentation: z.lazy(() => PaymentCreateRouteDocumentation$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteLinks$ {
  /** @deprecated use `PaymentCreateRouteLinks$inboundSchema` instead. */
  export const inboundSchema = PaymentCreateRouteLinks$inboundSchema;
  /** @deprecated use `PaymentCreateRouteLinks$outboundSchema` instead. */
  export const outboundSchema = PaymentCreateRouteLinks$outboundSchema;
  /** @deprecated use `PaymentCreateRouteLinks$Outbound` instead. */
  export type Outbound = PaymentCreateRouteLinks$Outbound;
}

export function paymentCreateRouteLinksToJSON(
  paymentCreateRouteLinks: PaymentCreateRouteLinks,
): string {
  return JSON.stringify(
    PaymentCreateRouteLinks$outboundSchema.parse(paymentCreateRouteLinks),
  );
}

export function paymentCreateRouteLinksFromJSON(
  jsonString: string,
): SafeParseResult<PaymentCreateRouteLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentCreateRouteLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentCreateRouteLinks' from JSON`,
  );
}

/** @internal */
export const PaymentCreateRouteResponse$inboundSchema: z.ZodType<
  PaymentCreateRouteResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource: z.string().default("route"),
  id: z.string(),
  paymentId: z.string(),
  amount: z.lazy(() => PaymentCreateRouteAmountResponse$inboundSchema),
  description: z.string(),
  destination: z.lazy(() =>
    PaymentCreateRouteDestinationResponse$inboundSchema
  ),
  _links: z.lazy(() => PaymentCreateRouteLinks$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type PaymentCreateRouteResponse$Outbound = {
  resource: string;
  id: string;
  paymentId: string;
  amount: PaymentCreateRouteAmountResponse$Outbound;
  description: string;
  destination: PaymentCreateRouteDestinationResponse$Outbound;
  _links: PaymentCreateRouteLinks$Outbound;
};

/** @internal */
export const PaymentCreateRouteResponse$outboundSchema: z.ZodType<
  PaymentCreateRouteResponse$Outbound,
  z.ZodTypeDef,
  PaymentCreateRouteResponse
> = z.object({
  resource: z.string().default("route"),
  id: z.string(),
  paymentId: z.string(),
  amount: z.lazy(() => PaymentCreateRouteAmountResponse$outboundSchema),
  description: z.string(),
  destination: z.lazy(() =>
    PaymentCreateRouteDestinationResponse$outboundSchema
  ),
  links: z.lazy(() => PaymentCreateRouteLinks$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentCreateRouteResponse$ {
  /** @deprecated use `PaymentCreateRouteResponse$inboundSchema` instead. */
  export const inboundSchema = PaymentCreateRouteResponse$inboundSchema;
  /** @deprecated use `PaymentCreateRouteResponse$outboundSchema` instead. */
  export const outboundSchema = PaymentCreateRouteResponse$outboundSchema;
  /** @deprecated use `PaymentCreateRouteResponse$Outbound` instead. */
  export type Outbound = PaymentCreateRouteResponse$Outbound;
}

export function paymentCreateRouteResponseToJSON(
  paymentCreateRouteResponse: PaymentCreateRouteResponse,
): string {
  return JSON.stringify(
    PaymentCreateRouteResponse$outboundSchema.parse(paymentCreateRouteResponse),
  );
}

export function paymentCreateRouteResponseFromJSON(
  jsonString: string,
): SafeParseResult<PaymentCreateRouteResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentCreateRouteResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentCreateRouteResponse' from JSON`,
  );
}
