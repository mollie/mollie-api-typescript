/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * The way through which the invoice is to be set to paid.
 */
export const SalesInvoicePaymentDetailsResponseSource = {
  Manual: "manual",
  PaymentLink: "payment-link",
  Payment: "payment",
} as const;
/**
 * The way through which the invoice is to be set to paid.
 */
export type SalesInvoicePaymentDetailsResponseSource = ClosedEnum<
  typeof SalesInvoicePaymentDetailsResponseSource
>;

export type SalesInvoicePaymentDetailsResponse = {
  /**
   * The way through which the invoice is to be set to paid.
   */
  source: SalesInvoicePaymentDetailsResponseSource;
  /**
   * A reference to the payment the sales invoice is paid by. Required for `source` values `payment-link` and
   *
   * @remarks
   * `payment`.
   */
  sourceReference?: string | null | undefined;
};

/** @internal */
export const SalesInvoicePaymentDetailsResponseSource$inboundSchema:
  z.ZodNativeEnum<typeof SalesInvoicePaymentDetailsResponseSource> = z
    .nativeEnum(SalesInvoicePaymentDetailsResponseSource);

/** @internal */
export const SalesInvoicePaymentDetailsResponseSource$outboundSchema:
  z.ZodNativeEnum<typeof SalesInvoicePaymentDetailsResponseSource> =
    SalesInvoicePaymentDetailsResponseSource$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SalesInvoicePaymentDetailsResponseSource$ {
  /** @deprecated use `SalesInvoicePaymentDetailsResponseSource$inboundSchema` instead. */
  export const inboundSchema =
    SalesInvoicePaymentDetailsResponseSource$inboundSchema;
  /** @deprecated use `SalesInvoicePaymentDetailsResponseSource$outboundSchema` instead. */
  export const outboundSchema =
    SalesInvoicePaymentDetailsResponseSource$outboundSchema;
}

/** @internal */
export const SalesInvoicePaymentDetailsResponse$inboundSchema: z.ZodType<
  SalesInvoicePaymentDetailsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  source: SalesInvoicePaymentDetailsResponseSource$inboundSchema,
  sourceReference: z.nullable(z.string()).optional(),
});

/** @internal */
export type SalesInvoicePaymentDetailsResponse$Outbound = {
  source: string;
  sourceReference?: string | null | undefined;
};

/** @internal */
export const SalesInvoicePaymentDetailsResponse$outboundSchema: z.ZodType<
  SalesInvoicePaymentDetailsResponse$Outbound,
  z.ZodTypeDef,
  SalesInvoicePaymentDetailsResponse
> = z.object({
  source: SalesInvoicePaymentDetailsResponseSource$outboundSchema,
  sourceReference: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SalesInvoicePaymentDetailsResponse$ {
  /** @deprecated use `SalesInvoicePaymentDetailsResponse$inboundSchema` instead. */
  export const inboundSchema = SalesInvoicePaymentDetailsResponse$inboundSchema;
  /** @deprecated use `SalesInvoicePaymentDetailsResponse$outboundSchema` instead. */
  export const outboundSchema =
    SalesInvoicePaymentDetailsResponse$outboundSchema;
  /** @deprecated use `SalesInvoicePaymentDetailsResponse$Outbound` instead. */
  export type Outbound = SalesInvoicePaymentDetailsResponse$Outbound;
}

export function salesInvoicePaymentDetailsResponseToJSON(
  salesInvoicePaymentDetailsResponse: SalesInvoicePaymentDetailsResponse,
): string {
  return JSON.stringify(
    SalesInvoicePaymentDetailsResponse$outboundSchema.parse(
      salesInvoicePaymentDetailsResponse,
    ),
  );
}

export function salesInvoicePaymentDetailsResponseFromJSON(
  jsonString: string,
): SafeParseResult<SalesInvoicePaymentDetailsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      SalesInvoicePaymentDetailsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SalesInvoicePaymentDetailsResponse' from JSON`,
  );
}
