/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The payment method's activation status for this profile.
 */
export const MethodStatus = {
  Activated: "activated",
  PendingBoarding: "pending-boarding",
  PendingReview: "pending-review",
  PendingExternal: "pending-external",
  Rejected: "rejected",
} as const;
/**
 * The payment method's activation status for this profile.
 */
export type MethodStatus = OpenEnum<typeof MethodStatus>;

/** @internal */
export const MethodStatus$inboundSchema: z.ZodType<
  MethodStatus,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(MethodStatus),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const MethodStatus$outboundSchema: z.ZodType<
  MethodStatus,
  z.ZodTypeDef,
  MethodStatus
> = z.union([
  z.nativeEnum(MethodStatus),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MethodStatus$ {
  /** @deprecated use `MethodStatus$inboundSchema` instead. */
  export const inboundSchema = MethodStatus$inboundSchema;
  /** @deprecated use `MethodStatus$outboundSchema` instead. */
  export const outboundSchema = MethodStatus$outboundSchema;
}
