/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  SalesInvoiceDiscountType,
  SalesInvoiceDiscountType$inboundSchema,
  SalesInvoiceDiscountType$outboundSchema,
} from "./salesinvoicediscounttype.js";

export type SalesInvoiceDiscount = {
  /**
   * The type of discount.
   */
  type: SalesInvoiceDiscountType;
  /**
   * A string containing an exact monetary amount in the given currency, or the percentage.
   */
  value: string;
};

/** @internal */
export const SalesInvoiceDiscount$inboundSchema: z.ZodType<
  SalesInvoiceDiscount,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: SalesInvoiceDiscountType$inboundSchema,
  value: z.string(),
});

/** @internal */
export type SalesInvoiceDiscount$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const SalesInvoiceDiscount$outboundSchema: z.ZodType<
  SalesInvoiceDiscount$Outbound,
  z.ZodTypeDef,
  SalesInvoiceDiscount
> = z.object({
  type: SalesInvoiceDiscountType$outboundSchema,
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SalesInvoiceDiscount$ {
  /** @deprecated use `SalesInvoiceDiscount$inboundSchema` instead. */
  export const inboundSchema = SalesInvoiceDiscount$inboundSchema;
  /** @deprecated use `SalesInvoiceDiscount$outboundSchema` instead. */
  export const outboundSchema = SalesInvoiceDiscount$outboundSchema;
  /** @deprecated use `SalesInvoiceDiscount$Outbound` instead. */
  export type Outbound = SalesInvoiceDiscount$Outbound;
}

export function salesInvoiceDiscountToJSON(
  salesInvoiceDiscount: SalesInvoiceDiscount,
): string {
  return JSON.stringify(
    SalesInvoiceDiscount$outboundSchema.parse(salesInvoiceDiscount),
  );
}

export function salesInvoiceDiscountFromJSON(
  jsonString: string,
): SafeParseResult<SalesInvoiceDiscount, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SalesInvoiceDiscount$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SalesInvoiceDiscount' from JSON`,
  );
}
