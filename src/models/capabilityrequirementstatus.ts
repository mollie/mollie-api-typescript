/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The status of the requirement depends on its due date.
 *
 * @remarks
 * If no due date is given, the status will be `requested`.
 */
export const CapabilityRequirementStatus = {
  CurrentlyDue: "currently-due",
  PastDue: "past-due",
  Requested: "requested",
} as const;
/**
 * The status of the requirement depends on its due date.
 *
 * @remarks
 * If no due date is given, the status will be `requested`.
 */
export type CapabilityRequirementStatus = OpenEnum<
  typeof CapabilityRequirementStatus
>;

/** @internal */
export const CapabilityRequirementStatus$inboundSchema: z.ZodType<
  CapabilityRequirementStatus,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(CapabilityRequirementStatus),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const CapabilityRequirementStatus$outboundSchema: z.ZodType<
  CapabilityRequirementStatus,
  z.ZodTypeDef,
  CapabilityRequirementStatus
> = z.union([
  z.nativeEnum(CapabilityRequirementStatus),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CapabilityRequirementStatus$ {
  /** @deprecated use `CapabilityRequirementStatus$inboundSchema` instead. */
  export const inboundSchema = CapabilityRequirementStatus$inboundSchema;
  /** @deprecated use `CapabilityRequirementStatus$outboundSchema` instead. */
  export const outboundSchema = CapabilityRequirementStatus$outboundSchema;
}
