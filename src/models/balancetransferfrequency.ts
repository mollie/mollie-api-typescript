/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * The frequency with which the available amount on the balance will be settled to the configured transfer
 *
 * @remarks
 * destination.
 *
 * Settlements created during weekends or on bank holidays will take place on the next business day.
 */
export const BalanceTransferFrequency = {
  Daily: "daily",
  EveryMonday: "every-monday",
  EveryTuesday: "every-tuesday",
  EveryWednesday: "every-wednesday",
  EveryThursday: "every-thursday",
  EveryFriday: "every-friday",
  Monthly: "monthly",
  Never: "never",
} as const;
/**
 * The frequency with which the available amount on the balance will be settled to the configured transfer
 *
 * @remarks
 * destination.
 *
 * Settlements created during weekends or on bank holidays will take place on the next business day.
 */
export type BalanceTransferFrequency = OpenEnum<
  typeof BalanceTransferFrequency
>;

/** @internal */
export const BalanceTransferFrequency$inboundSchema: z.ZodType<
  BalanceTransferFrequency,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(BalanceTransferFrequency),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const BalanceTransferFrequency$outboundSchema: z.ZodType<
  BalanceTransferFrequency,
  z.ZodTypeDef,
  BalanceTransferFrequency
> = z.union([
  z.nativeEnum(BalanceTransferFrequency),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BalanceTransferFrequency$ {
  /** @deprecated use `BalanceTransferFrequency$inboundSchema` instead. */
  export const inboundSchema = BalanceTransferFrequency$inboundSchema;
  /** @deprecated use `BalanceTransferFrequency$outboundSchema` instead. */
  export const outboundSchema = BalanceTransferFrequency$outboundSchema;
}
