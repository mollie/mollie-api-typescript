/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United
 *
 * @remarks
 * Kingdom, and shifted VAT for merchants in the European Union.
 *
 * The field is not present for merchants residing in other countries.
 */
export const OrganizationVatRegulation = {
  Dutch: "dutch",
  British: "british",
  Shifted: "shifted",
} as const;
/**
 * Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United
 *
 * @remarks
 * Kingdom, and shifted VAT for merchants in the European Union.
 *
 * The field is not present for merchants residing in other countries.
 */
export type OrganizationVatRegulation = OpenEnum<
  typeof OrganizationVatRegulation
>;

/** @internal */
export const OrganizationVatRegulation$inboundSchema: z.ZodType<
  OrganizationVatRegulation,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(OrganizationVatRegulation),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const OrganizationVatRegulation$outboundSchema: z.ZodType<
  OrganizationVatRegulation,
  z.ZodTypeDef,
  OrganizationVatRegulation
> = z.union([
  z.nativeEnum(OrganizationVatRegulation),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrganizationVatRegulation$ {
  /** @deprecated use `OrganizationVatRegulation$inboundSchema` instead. */
  export const inboundSchema = OrganizationVatRegulation$inboundSchema;
  /** @deprecated use `OrganizationVatRegulation$outboundSchema` instead. */
  export const outboundSchema = OrganizationVatRegulation$outboundSchema;
}
