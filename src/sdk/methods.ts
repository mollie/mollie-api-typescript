/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { methodsAll } from "../funcs/methodsAll.js";
import { methodsGet } from "../funcs/methodsGet.js";
import { methodsList } from "../funcs/methodsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Methods extends ClientSDK {
  /**
   * List payment methods
   *
   * @remarks
   * Retrieve all enabled payment methods. The results of this endpoint are
   * **not** paginated — unlike most other list endpoints in our API.
   *
   * For test mode, all pending and enabled payment methods are returned. If no
   * payment methods are requested yet, the most popular payment methods are returned in the test mode. For live
   * mode, only fully enabled payment methods are returned.
   *
   * Payment methods can be requested and enabled via the Mollie Dashboard, or
   * via the [Enable payment method endpoint](enable-method) of the Profiles API.
   *
   * The list can optionally be filtered using a number of parameters described
   * below.
   *
   * By default, only payment methods for the Euro currency are returned. If you
   * wish to retrieve payment methods which exclusively support other currencies (e.g. Twint), you need to use the
   * `amount` parameters.
   */
  async list(
    request?: operations.ListMethodsRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.ListMethodsResponse> {
    return unwrapAsync(methodsList(
      this,
      request,
      options,
    ));
  }

  /**
   * List all payment methods
   *
   * @remarks
   * Retrieve all payment methods that Mollie offers, regardless of the eligibility of the organization for the specific
   * method. The results of this endpoint are **not** paginated — unlike most other list endpoints in our API.
   *
   * The list can optionally be filtered using a number of parameters described below.
   */
  async all(
    request?: operations.ListAllMethodsRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.ListAllMethodsResponse> {
    return unwrapAsync(methodsAll(
      this,
      request,
      options,
    ));
  }

  /**
   * Get payment method
   *
   * @remarks
   * Retrieve a single payment method by its ID.
   *
   * If a method is not available on this profile, a `404 Not Found` response is
   * returned. If the method is available but not enabled yet, a status `403 Forbidden` is returned. You can enable
   * payments methods via the [Enable payment method endpoint](enable-method) of the Profiles API, or via
   * the Mollie Dashboard.
   *
   * If you do not know the method's ID, you can use the [methods list
   * endpoint](list-methods) to retrieve all payment methods that are available.
   *
   * Additionally, it is possible to check if wallet methods such as Apple Pay
   * are enabled by passing the wallet ID (`applepay`) as the method ID.
   */
  async get(
    request: operations.GetMethodRequest,
    options?: RequestOptions,
  ): Promise<operations.GetMethodResponse> {
    return unwrapAsync(methodsGet(
      this,
      request,
      options,
    ));
  }
}
