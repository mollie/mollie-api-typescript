/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clientsGet } from "../funcs/clientsGet.js";
import { clientsList } from "../funcs/clientsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Clients extends ClientSDK {
  /**
   * List clients
   *
   * @remarks
   * Retrieve a list of all clients linked to your account.
   *
   * The results are paginated.
   *
   * > ðŸ”‘ Access with
   * >
   * > [Access token with **clients.read**](/reference/authentication)
   */
  async list(
    request?: operations.ListClientsRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.ListClientsResponse> {
    return unwrapAsync(clientsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get client
   *
   * @remarks
   * Retrieve a single client by its ID.
   *
   * > ðŸ”‘ Access with
   * >
   * > [Access token with **clients.read**](/reference/authentication)
   */
  async get(
    request: operations.GetClientRequest,
    options?: RequestOptions,
  ): Promise<operations.GetClientResponse> {
    return unwrapAsync(clientsGet(
      this,
      request,
      options,
    ));
  }
}
