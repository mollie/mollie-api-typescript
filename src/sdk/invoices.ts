/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { invoicesGet } from "../funcs/invoicesGet.js";
import { invoicesList } from "../funcs/invoicesList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Invoices extends ClientSDK {
  /**
   * List invoices
   *
   * @remarks
   * Retrieve a list of all your invoices, optionally filtered by year or by invoice reference.
   *
   * The results are paginated.
   *
   * > ðŸ”‘ Access with
   * >
   * > [Access token with **invoices.read**](/reference/authentication)
   */
  async list(
    request?: operations.ListInvoicesRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.ListInvoicesResponse> {
    return unwrapAsync(invoicesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get invoice
   *
   * @remarks
   * Retrieve a single invoice by its ID.
   *
   * If you want to retrieve the details of an invoice by its invoice number, call the [List invoices](list-invoices) endpoint with the `reference` parameter.
   *
   * > ðŸ”‘ Access with
   * >
   * > [Access token with **invoices.read**](/reference/authentication)
   */
  async get(
    request: operations.GetInvoiceRequest,
    options?: RequestOptions,
  ): Promise<operations.GetInvoiceResponse> {
    return unwrapAsync(invoicesGet(
      this,
      request,
      options,
    ));
  }
}
