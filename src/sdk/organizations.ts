/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { organizationsGet } from "../funcs/organizationsGet.js";
import { organizationsGetCurrent } from "../funcs/organizationsGetCurrent.js";
import { organizationsGetPartner } from "../funcs/organizationsGetPartner.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Organizations extends ClientSDK {
  /**
   * Get organization
   *
   * @remarks
   * Retrieve a single organization by its ID.
   *
   * You can normally only retrieve the currently authenticated organization with this endpoint. This is primarily useful
   * for OAuth apps. See also [Get current organization](get-current-organization).
   *
   * If you have a *partner account*', you can retrieve organization details of connected organizations.
   */
  async get(
    request: operations.GetOrganizationRequest,
    options?: RequestOptions,
  ): Promise<operations.GetOrganizationResponse> {
    return unwrapAsync(organizationsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Get current organization
   *
   * @remarks
   * Retrieve the currently authenticated organization. A convenient alias of the [Get organization](get-organization)
   * endpoint.
   *
   * For a complete reference of the organization object, refer to the [Get organization](get-organization) endpoint
   * documentation.
   */
  async getCurrent(
    options?: RequestOptions,
  ): Promise<operations.GetCurrentOrganizationResponse> {
    return unwrapAsync(organizationsGetCurrent(
      this,
      options,
    ));
  }

  /**
   * Get partner status
   *
   * @remarks
   * Retrieve partnership details about the currently authenticated organization. Only relevant for so-called *partner
   * accounts*.
   */
  async getPartner(
    options?: RequestOptions,
  ): Promise<operations.GetPartnerStatusResponse> {
    return unwrapAsync(organizationsGetPartner(
      this,
      options,
    ));
  }
}
