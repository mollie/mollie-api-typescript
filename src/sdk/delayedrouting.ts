/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { delayedRoutingCreate } from "../funcs/delayedRoutingCreate.js";
import { delayedRoutingList } from "../funcs/delayedRoutingList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class DelayedRouting extends ClientSDK {
  /**
   * Create a delayed route
   *
   * @remarks
   * Create a route for a specific payment. The routed amount is credited to the account of your customer.
   *
   * > ðŸ”‘ Access with
   * >
   * > [API key](/reference/authentication)
   */
  async create(
    request: operations.PaymentCreateRouteRequest,
    options?: RequestOptions,
  ): Promise<operations.PaymentCreateRouteResponse> {
    return unwrapAsync(delayedRoutingCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * List payment routes
   *
   * @remarks
   * Retrieve a list of all routes created for a specific payment.
   *
   * > ðŸ”‘ Access with
   * >
   * > [API key](/reference/authentication)
   */
  async list(
    request: operations.PaymentListRoutesRequest,
    options?: RequestOptions,
  ): Promise<operations.PaymentListRoutesResponse> {
    return unwrapAsync(delayedRoutingList(
      this,
      request,
      options,
    ));
  }
}
