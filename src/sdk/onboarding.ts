/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { onboardingGet } from "../funcs/onboardingGet.js";
import { onboardingSubmit } from "../funcs/onboardingSubmit.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Onboarding extends ClientSDK {
  /**
   * Get onboarding status
   *
   * @remarks
   * Retrieve the onboarding status of the currently authenticated organization.
   *
   * > 🔑 Access with
   * >
   * > [Access token with **onboarding.read**](/reference/authentication)
   */
  async get(
    options?: RequestOptions,
  ): Promise<operations.GetOnboardingStatusResponse> {
    return unwrapAsync(onboardingGet(
      this,
      options,
    ));
  }

  /**
   * Submit onboarding data
   *
   * @remarks
   * **⚠️ We no longer recommend implementing this endpoint. Please refer to the Client Links API instead to kick off the onboarding process for your merchants.**
   *
   * Submit data that will be prefilled in the merchant's onboarding. The data you submit will only be processed when the onboarding status is `needs-data`. Information that the merchant has entered in their dashboard will not be overwritten.
   *
   * > 🔑 Access with
   * >
   * > [Access token with **onboarding.write**](/reference/authentication)
   */
  async submit(
    request?: operations.SubmitOnboardingDataRequest | undefined,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(onboardingSubmit(
      this,
      request,
      options,
    ));
  }
}
