/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersCreate } from "../funcs/customersCreate.js";
import { customersCreatePayment } from "../funcs/customersCreatePayment.js";
import { customersDelete } from "../funcs/customersDelete.js";
import { customersGet } from "../funcs/customersGet.js";
import { customersList } from "../funcs/customersList.js";
import { customersListPayments } from "../funcs/customersListPayments.js";
import { customersUpdate } from "../funcs/customersUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Customers extends ClientSDK {
  /**
   * Create customer
   *
   * @remarks
   * Creates a simple minimal representation of a customer. Payments, recurring mandates, and subscriptions can be linked
   * to this customer object, which simplifies management of recurring payments.
   *
   * Once registered, customers will also appear in your Mollie dashboard.
   */
  async create(
    request?: models.EntityCustomer | undefined,
    options?: RequestOptions,
  ): Promise<models.CustomerResponse> {
    return unwrapAsync(customersCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * List customers
   *
   * @remarks
   * Retrieve a list of all customers.
   *
   * The results are paginated.
   */
  async list(
    request?: operations.ListCustomersRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.ListCustomersResponse> {
    return unwrapAsync(customersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get customer
   *
   * @remarks
   * Retrieve a single customer by its ID.
   */
  async get(
    request: operations.GetCustomerRequest,
    options?: RequestOptions,
  ): Promise<operations.GetCustomerResponse> {
    return unwrapAsync(customersGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update customer
   *
   * @remarks
   * Update an existing customer.
   *
   * For an in-depth explanation of each parameter, refer to the [Create customer](create-customer) endpoint.
   */
  async update(
    request: operations.UpdateCustomerRequest,
    options?: RequestOptions,
  ): Promise<models.CustomerResponse> {
    return unwrapAsync(customersUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete customer
   *
   * @remarks
   * Delete a customer. All mandates and subscriptions created for this customer will be canceled as well.
   */
  async delete(
    request: operations.DeleteCustomerRequest,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(customersDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Create customer payment
   *
   * @remarks
   * Creates a payment for the customer.
   *
   * Linking customers to payments enables you to:
   *
   * * Keep track of payment preferences for your customers
   * * Allow your customers to charge a previously used credit card with a single click in our hosted checkout
   * * Improve payment insights in the Mollie dashboard
   * * Use recurring payments
   *
   * This endpoint is effectively an alias of the [Create payment endpoint](create-payment) with the `customerId`
   * parameter predefined.
   */
  async createPayment(
    request: operations.CreateCustomerPaymentRequest,
    options?: RequestOptions,
  ): Promise<models.PaymentResponse> {
    return unwrapAsync(customersCreatePayment(
      this,
      request,
      options,
    ));
  }

  /**
   * List customer payments
   *
   * @remarks
   * Retrieve all payments linked to the customer.
   */
  async listPayments(
    request: operations.ListCustomerPaymentsRequest,
    options?: RequestOptions,
  ): Promise<operations.ListCustomerPaymentsResponse> {
    return unwrapAsync(customersListPayments(
      this,
      request,
      options,
    ));
  }
}
