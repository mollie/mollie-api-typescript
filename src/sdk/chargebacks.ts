/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { chargebacksAll } from "../funcs/chargebacksAll.js";
import { chargebacksGet } from "../funcs/chargebacksGet.js";
import { chargebacksList } from "../funcs/chargebacksList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Chargebacks extends ClientSDK {
  /**
   * List payment chargebacks
   *
   * @remarks
   * Retrieve the chargebacks initiated for a specific payment.
   *
   * The results are paginated.
   */
  async list(
    request: operations.ListChargebacksRequest,
    options?: RequestOptions,
  ): Promise<operations.ListChargebacksResponse> {
    return unwrapAsync(chargebacksList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get payment chargeback
   *
   * @remarks
   * Retrieve a single payment chargeback by its ID and the ID of its parent payment.
   */
  async get(
    request: operations.GetChargebackRequest,
    options?: RequestOptions,
  ): Promise<operations.GetChargebackResponse> {
    return unwrapAsync(chargebacksGet(
      this,
      request,
      options,
    ));
  }

  /**
   * List all chargebacks
   *
   * @remarks
   * Retrieve all chargebacks initiated for all your payments.
   *
   * The results are paginated.
   */
  async all(
    request?: operations.ListAllChargebacksRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.ListAllChargebacksResponse> {
    return unwrapAsync(chargebacksAll(
      this,
      request,
      options,
    ));
  }
}
